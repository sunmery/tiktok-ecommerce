// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package models

import (
	"context"
)

type Querier interface {
	//CreateOrder
	//
	//  INSERT INTO orders.orders (id, user_id, currency, street_address,
	//                             city, state, country, zip_code, email,
	//                             created_at, updated_at)
	//  VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
	//  RETURNING id, user_id, currency, street_address, city, state, country, zip_code, email, created_at, updated_at
	CreateOrder(ctx context.Context, arg CreateOrderParams) (OrdersOrders, error)
	//CreateSubOrder
	//
	//  INSERT INTO orders.sub_orders (id, order_id, merchant_id, total_amount,
	//                                 currency, status, items, created_at, updated_at)
	//  VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
	//  RETURNING id, order_id, merchant_id, total_amount, currency, status, items, created_at, updated_at
	CreateSubOrder(ctx context.Context, arg CreateSubOrderParams) (OrdersSubOrders, error)
	//GetOrderByID
	//
	//  SELECT id, user_id, currency, street_address, city, state, country, zip_code, email, created_at, updated_at
	//  FROM orders.orders
	//  WHERE id = $1
	GetOrderByID(ctx context.Context, id string) (OrdersOrders, error)
	//ListOrdersByUser
	//
	//  SELECT id, user_id, currency, street_address, city, state, country, zip_code, email, created_at, updated_at
	//  FROM orders.orders
	//  WHERE user_id = $1
	//  ORDER BY created_at DESC
	//  LIMIT $2 OFFSET $3
	ListOrdersByUser(ctx context.Context, arg ListOrdersByUserParams) ([]OrdersOrders, error)
	//UpdateSubOrderStatus
	//
	//  UPDATE orders.sub_orders
	//  SET status     = $2,
	//      updated_at = $3
	//  WHERE id = $1
	UpdateSubOrderStatus(ctx context.Context, arg UpdateSubOrderStatusParams) error
}

var _ Querier = (*Queries)(nil)
