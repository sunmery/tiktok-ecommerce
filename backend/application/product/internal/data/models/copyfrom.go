// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: copyfrom.go

package models

import (
	"context"
)

// iteratorForCreateProductImages implements pgx.CopyFromSource.
type iteratorForCreateProductImages struct {
	rows                 []CreateProductImagesParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateProductImages) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateProductImages) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].MerchantID,
		r.rows[0].ProductID,
		r.rows[0].Url,
		r.rows[0].IsPrimary,
		r.rows[0].SortOrder,
	}, nil
}

func (r iteratorForCreateProductImages) Err() error {
	return nil
}

// CreateProductImages
//
//	INSERT INTO products.product_images (merchant_id, -- 新增分片键
//	                                     product_id,
//	                                     url,
//	                                     is_primary,
//	                                     sort_order)
//	VALUES ($1, $2, $3, $4, $5)
func (q *Queries) CreateProductImages(ctx context.Context, arg []CreateProductImagesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"products", "product_images"}, []string{"merchant_id", "product_id", "url", "is_primary", "sort_order"}, &iteratorForCreateProductImages{rows: arg})
}
