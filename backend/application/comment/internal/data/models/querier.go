// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package models

import (
	"context"
)

type Querier interface {
	//CreateComment
	//
	//  INSERT INTO comments.comments (id, product_id, merchant_id, user_id, score, content)
	//  VALUES ($1, $2, $3, $4, $5, $6)
	//  RETURNING id, product_id, merchant_id, user_id, score, content, created_at, updated_at
	CreateComment(ctx context.Context, arg CreateCommentParams) (CommentsComments, error)
	//DeleteComment
	//
	//  DELETE
	//  FROM comments.comments
	//  WHERE id = $1
	//    AND user_id = $2
	DeleteComment(ctx context.Context, arg DeleteCommentParams) error
	//GetCommentCount
	//
	//  SELECT COUNT(*)
	//  FROM comments.comments
	//  WHERE product_id = $1
	//    AND merchant_id = $2
	GetCommentCount(ctx context.Context, arg GetCommentCountParams) (int64, error)
	//GetCommentsByProduct
	//
	//  SELECT id, product_id, merchant_id, user_id, score, content, created_at, updated_at
	//  FROM comments.comments
	//  WHERE product_id = $1
	//    AND merchant_id = $2
	//  ORDER BY created_at DESC
	//  LIMIT $4 OFFSET $3
	GetCommentsByProduct(ctx context.Context, arg GetCommentsByProductParams) ([]CommentsComments, error)
	//UpdateComment
	//
	//  UPDATE comments.comments
	//  SET score      = COALESCE($1, score),
	//      content    = COALESCE($2, content),
	//      updated_at = NOW()
	//  WHERE id = $3
	//    AND user_id = $4
	//  RETURNING id, product_id, merchant_id, user_id, score, content, created_at, updated_at
	UpdateComment(ctx context.Context, arg UpdateCommentParams) (CommentsComments, error)
}

var _ Querier = (*Queries)(nil)
