syntax = "proto3";

package ecommerce.cart.v1;

import "google/api/annotations.proto";

option go_package = "backend/api/cart/v1;cartv1";

service CartService {
  //新增购物车商品
  rpc UpsertItem(UpsertItemReq) returns (UpsertItemResp) {
    option (google.api.http) = {
      post: "/v1/carts",
      body: "*"
    };
  }
  //获取购物车信息
  rpc GetCart(GetCartReq) returns (GetCartResp) {
    option (google.api.http) = {
      get: "/v1/carts"
    };
  }
  //清空购物车
  rpc EmptyCart(EmptyCartReq) returns (EmptyCartResp) {
    option (google.api.http) = {
      delete: "/v1/carts"
    };
  }
  //删除购物车商品
  rpc RemoveCartItem(RemoveCartItemReq) returns (RemoveCartItemResp) {
    option (google.api.http) = {
      delete: "/v1/carts/item"
    };
  }
}

// 列出所有购物车
message ListCartsReq {}

message ListCartsResp {
  repeated CartSummary carts = 1; // 返回购物车列表
}

message CartSummary {
  uint32 cart_id = 1 ; // 购物车ID
  string cart_name = 2 ; // 购物车名称
}

message CreateOrderResp {
  bool success = 1;
  repeated CartItem items = 2;  // 返回被选中的商品
}

// 购物车商品
message CartItem {
  string merchant_id = 1 ;
  string product_id = 2 ; // 商品ID
  int32 quantity = 3;       // 商品数量
  double price = 4;          // 商品价格
}

// 新增购物车商品
message UpsertItemReq {
  CartItem item = 2;
}

message UpsertItemResp {
  bool success = 1;  // 操作是否成功
}

// 清空购物车
message EmptyCartReq {}

message EmptyCartResp {
  bool success = 1;  // 操作是否成功
}

// 获取购物车信息
message GetCartReq {
  string user_id = 1;
}

message GetCartResp {
  Cart cart = 1;
}

// 购物车信息
message Cart {
  repeated CartItem items = 2;   // 购物车商品列表
}

// 删除购物车商品
message RemoveCartItemReq {
  string merchant_id = 2 ;
  string product_id = 3 ;
}
message RemoveCartItemResp {
  bool success = 1;  // 操作是否成功
}
