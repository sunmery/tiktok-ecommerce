syntax = "proto3";

package ecommerce.order.v1;

option go_package = "backend/api/order/v1;orderv1";

import "google/api/annotations.proto";

service OrderService {
  // 标记订单为已支付
  rpc MarkOrderPaid(MarkOrderPaidReq) returns (MarkOrderPaidResp) {
    option (google.api.http) = {
      post: "/v1/orders/{order_id}/paid" // 定义 HTTP POST 请求路径，路径参数为 order_id
      body: "*"                          // 表示请求体包含所有字段
    };
  }
}

// 支付状态的枚举类型
enum PaymentStatus {
  PENDING = 0; // 未支付
  PAID = 1; // 已支付
  FAILED = 2; // 支付失败
  CANCELLED = 3; // 取消支付
}

// 货运状态的枚举类型
enum ShippingStatus {
  WAIT_COMMAND = 0; //   等待操作
  PENDING_SHIPMENT = 1; //  待发货
  SHIPPED = 2; // 已发货
  IN_TRANSIT = 3; // 运输中
  DELIVERED = 4; // 已送达
  CONFIRMED = 5; // 已收货
  CANCELLED_SHIPMENT = 6; // 已取消发货
}

// 标记订单为已支付请求的消息结构
message MarkOrderPaidReq {
  optional string user_id = 1; // 用户 ID
  int64 order_id = 2; // 订单 ID
}

// 标记订单为已支付响应的消息结构
message MarkOrderPaidResp {}
