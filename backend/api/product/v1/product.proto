syntax = "proto3";

package ecommerce.product.v1;

option go_package = "backend/api/product/v1;productv1";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

// 商品服务定义
service ProductService {
  // 创建商品（草稿状态）
  rpc CreateProduct(CreateProductRequest) returns (CreateProductReply) {
    option (google.api.http) = {
      post: "/v1/products"
      body: "*"
    };
  }

  // 更新商品信息
  rpc UpdateProduct(UpdateProductRequest) returns (Product) {
    option (google.api.http) = {
      put: "/v1/products/{id}"
      body: "*"
    };
  }

  // 提交商品审核
  rpc SubmitForAudit(SubmitAuditRequest) returns (AuditRecord) {
    option (google.api.http) = {
      post: "/v1/products/{product_id}/submit-audit"
      body: "*"
    };
  }

  // 审核商品
  rpc AuditProduct(AuditProductRequest) returns (AuditRecord) {
    option (google.api.http) = {
      post: "/v1/products/{product_id}/audit"
      body: "*"
    };
  }

  // 获取商品详情
  rpc GetProduct(GetProductRequest) returns (Product) {
    option (google.api.http) = {
      get: "/v1/products/{id}"
    };
  }

  // 根据商品名称模糊查询
  rpc SearchProductsByName(SearchProductRequest) returns (Products) {
    option (google.api.http) = {
      post: "/v1/products/search"
      body: "*"
    };
  }

  // 随机返回商品数据
  rpc ListRandomProducts(ListRandomProductsRequest) returns (Products) {
    option (google.api.http) = {
      get: "/v1/products"
    };
  }

  // 根据商品分类查询
  rpc ListProductsByCategory(ListProductsByCategoryRequest) returns (Products) {
    option (google.api.http) = {
      get: "/v1/products/categories/{name}"
    };
  }

  // 删除商品（软删除）
  rpc DeleteProduct(DeleteProductRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/products/del"
    };
  }

  // 自动补全搜索词
  rpc AutocompleteSearch(AutoCompleteRequest) returns (AutoCompleteResponse) {
    option (google.api.http) = {
      get: "/v1/goods/autocomplete"
    };
  }
}

// 商品状态枚举定义
enum ProductStatus {
  PRODUCT_STATUS_DRAFT = 0;    // 草稿状态
  PRODUCT_STATUS_PENDING = 1;  // 待审核
  PRODUCT_STATUS_APPROVED = 2; // 审核通过
  PRODUCT_STATUS_REJECTED = 3; // 审核驳回
  PRODUCT_STATUS_SOLDOUT = 4; // 下架
}

// 审核动作枚举
enum AuditAction {
  AUDIT_ACTION_APPROVE = 0; // 通过审核
  AUDIT_ACTION_REJECT = 1;  // 驳回审核
}

//
message ListRandomProductsRequest {
  uint32 page = 1;
  uint32 page_size = 2;
  uint32 status = 3; // 商品状态
}

message SearchProductRequest {
  google.protobuf.Struct query = 1; // 搜索查询条件
  int32 page = 2; // 页码
  int32 pageSize = 3; // 每页数量
  int32 mxprice = 4; // 最大价格
  int32 minprice = 5; // 最小价格
  string sort = 6; // 排序方式
}

// 商品数组
message Products {
  repeated Product items = 1;
}

//分类名称
message ListProductsByCategoryRequest {
  string name = 1;
}

// 新增分类验证相关定义
message CategoryInfo {
  uint32 category_id = 1 [(validate.rules).uint32.gt = 0]; // 确保验证规则与字段类型匹配
  string category_name = 2;
}

// 图片信息
message Image {
  string url = 1;         // 图片URL
  bool is_primary = 2;    // 是否主图
  int32 sort_order = 3;   // 排序顺序
}

// 商品核心数据结构
message Product {
  string id = 1 [(validate.rules).string = {min_len: 1}];  // 商品唯一ID（系统生成）
  string name = 2 [(validate.rules).string = {min_len: 2, max_len: 200}]; // 商品名称
  string description = 3 [(validate.rules).string.max_len = 2000]; // 商品描述
  double price = 4; // 商品价格（单位：元）
  ProductStatus status = 6; // 当前状态
  string merchant_id = 7;    // 所属商家ID
  repeated Image images = 8; // 商品图片列表

  // 商品属性（动态KV结构）
  map<string, AttributeValue> attributes = 9;

  // 审核信息（仅当处于审核状态时有效）
  AuditInfo audit_info = 10;

  // 时间戳
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  CategoryInfo category = 13;
}

// 创建商品的返回值
message CreateProductReply {
  string id = 1 [(validate.rules).string = {min_len: 1}];  // 商品唯一ID（系统生成）
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
}

// 属性值类型定义
message AttributeValue {
  string string_value = 1;      // 字符串类型值
  StringArray array_value = 2;  // 数组类型值
  NestedObject object_value = 3;// 嵌套对象
}

// 字符串数组
message StringArray {
  repeated string items = 1;
}

// 嵌套对象结构
message NestedObject {
  map<string, AttributeValue> fields = 1;
}

// 审核信息
message AuditInfo {
  string audit_id = 1;           // 审核记录ID
  string reason = 2;            // 审核意见/驳回原因
  string operator_id = 3;        // 操作人ID
  google.protobuf.Timestamp operated_at = 4; // 操作时间
}

// 创建商品请求
message CreateProductRequest {
  string name = 1 [(validate.rules).string = {min_len: 2, max_len: 200}]; // 商品名称
  double price = 2; // 商品价格（单位：元
  string description = 3 [(validate.rules).string.max_len = 2000]; // 商品描述
  uint32 stock = 4; // 商品库存
  repeated Image images = 8; // 商品图片列表
  map<string, AttributeValue>  attributes = 7;
  // 时间戳
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  CategoryInfo category = 13;
}

// 更新商品请求
message UpdateProductRequest {
  string id = 1;
  Product product = 2 [(validate.rules).message.required = true];
}

// 提交审核请求
message SubmitAuditRequest {
  string product_id = 1;
}

// 审核操作请求
message AuditProductRequest {
  string product_id = 1;
  string merchant_id = 2; // 用于分片路由
  AuditAction action = 3;
  string reason = 4;     // 驳回时必填
  string operator_id = 5;
}

// 查询单个商品请求
message GetProductRequest {
  string id = 1 [(validate.rules).string = {min_len: 1}];
  string merchant_id = 2 [(validate.rules).string = {min_len: 1}]; // 商家 ID, 用于分片路由
}

// 删除商品请求
message DeleteProductRequest {
  string id = 1; // 商品 ID
  uint32 status = 3; // 商品状态, 默认删除状态为4, 即下架状态
}

// 审核记录返回结构
message AuditRecord {
  string id = 1;
  string product_id = 2;
  ProductStatus old_status = 3;
  ProductStatus new_status = 4;
  string reason = 5;
  string operator_id = 6;
  google.protobuf.Timestamp operated_at = 7;
}

// 自动补全请求消息
message AutoCompleteRequest {
  string prefix = 1; // 前缀
}

// 自动补全响应消息
message AutoCompleteResponse {
  repeated string suggestions = 1; // 建议列表
}