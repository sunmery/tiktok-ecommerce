syntax = "proto3";

package api.product.v1;

option go_package = "api/product/v1;product";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

// 商品状态枚举定义
enum ProductStatus {
  PRODUCT_STATUS_DRAFT = 0;    // 草稿状态
  PRODUCT_STATUS_PENDING = 1;  // 待审核
  PRODUCT_STATUS_APPROVED = 2; // 审核通过
  PRODUCT_STATUS_REJECTED = 3; // 审核驳回
}

// 审核动作枚举
enum AuditAction {
  AUDIT_ACTION_APPROVE = 0; // 通过审核
  AUDIT_ACTION_REJECT = 1;  // 驳回审核
}

// 商品服务定义
service ProductService {
  // 创建商品（草稿状态）
  rpc CreateProduct(CreateProductRequest) returns (Product) {
    option (google.api.http) = {
      post: "/v1/products"
      body: "*"
    };
  }

  // 更新商品信息
  rpc UpdateProduct(UpdateProductRequest) returns (Product) {
    option (google.api.http) = {
      put: "/v1/products/{id}"
      body: "*"
    };
  }

  // 提交商品审核
  rpc SubmitForAudit(SubmitAuditRequest) returns (AuditRecord) {
    option (google.api.http) = {
      post: "/v1/products/{product_id}/submit-audit"
      body: "*"
    };
  }

  // 审核商品
  rpc AuditProduct(AuditProductRequest) returns (AuditRecord) {
    option (google.api.http) = {
      post: "/v1/products/{product_id}/audit"
      body: "*"
    };
  }

  // 获取商品详情
  rpc GetProduct(GetProductRequest) returns (Product) {
    option (google.api.http) = {
      get: "/v1/products/{id}"
    };
  }

  // 删除商品（软删除）
  rpc DeleteProduct(DeleteProductRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/products/{id}"
    };
  }
}

// 新增分类验证相关定义
message CategoryInfo {
  string category_id = 1 [(validate.rules).string = {min_len: 1}];
  string category_name = 2;
}

// 商品核心数据结构
message Product {
  uint64 id = 1[
    (validate.rules).uint64.gt = 0
  ];  // 商品唯一ID（系统生成）
  string name = 2 [(validate.rules).string = {min_len: 2, max_len: 200}]; // 商品名称
  string description = 3 [(validate.rules).string.max_len = 2000]; // 商品描述
  double price = 4; // 商品价格（单位：元）
  int32 stock = 5;  // 库存数量
  ProductStatus status = 6; // 当前状态
  uint64 merchant_id = 7;    // 所属商家ID

  // 图片信息
  message Image {
    string url = 1;         // 图片URL
    bool is_primary = 2;    // 是否主图
    int32 sort_order = 3;   // 排序顺序
  }
  repeated Image images = 8; // 商品图片列表

  // 商品属性（动态KV结构）
  map<string, AttributeValue> attributes = 9;

  // 审核信息（仅当处于审核状态时有效）
  AuditInfo audit_info = 10;

  // 时间戳
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  CategoryInfo category = 13; // 替换原有category_id字段
}

// 属性值类型定义
message AttributeValue {
  oneof value {
    string string_value = 1;      // 字符串类型值
    StringArray array_value = 2;  // 数组类型值
    NestedObject object_value = 3;// 嵌套对象
  }
}

// 字符串数组
message StringArray {
  repeated string items = 1;
}

// 嵌套对象结构
message NestedObject {
  map<string, AttributeValue> fields = 1;
}

// 审核信息
message AuditInfo {
  uint64 audit_id = 1;           // 审核记录ID
  string reason = 2;            // 审核意见/驳回原因
  uint64 operator_id = 3;        // 操作人ID
  google.protobuf.Timestamp operated_at = 4; // 操作时间
}

// 创建商品请求
message CreateProductRequest {
  Product product = 1 [(validate.rules).message.required = true];
}

// 更新商品请求
message UpdateProductRequest {
  uint64 id = 1;
  Product product = 2 [(validate.rules).message.required = true];
}

// 提交审核请求
message SubmitAuditRequest {
  uint64 product_id = 1;
  uint64 merchant_id = 2; // 商家 ID, 用于分片路由
}

// 审核操作请求
message AuditProductRequest {
  uint64 product_id = 1;
  uint64 merchant_id = 2; // 用于分片路由
  AuditAction action = 3;
  string reason = 4;     // 驳回时必填
  uint64 operator_id = 5;
}

// 查询单个商品请求
message GetProductRequest {
  uint64 id = 1 [(validate.rules).int64 = {gt:0}];
  uint64 merchant_id = 2 [(validate.rules).int64 = {gt:0}]; // 商家 ID, 用于分片路由
}

// 删除商品请求
message DeleteProductRequest {
  uint64 id = 1;
  uint64 merchant_id = 2; // 商家 ID, 用于分片路由
}

// 审核记录返回结构
message AuditRecord {
  uint64 id = 1;
  uint64 product_id = 2;
  ProductStatus old_status = 3;
  ProductStatus new_status = 4;
  string reason = 5;
  uint64 operator_id = 6;
  google.protobuf.Timestamp operated_at = 7;
}
