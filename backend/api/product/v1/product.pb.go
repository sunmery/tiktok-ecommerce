// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/product.proto

package productv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品状态枚举定义
type ProductStatus int32

const (
	ProductStatus_PRODUCT_STATUS_DRAFT    ProductStatus = 0 // 草稿状态
	ProductStatus_PRODUCT_STATUS_PENDING  ProductStatus = 1 // 待审核
	ProductStatus_PRODUCT_STATUS_APPROVED ProductStatus = 2 // 审核通过
	ProductStatus_PRODUCT_STATUS_REJECTED ProductStatus = 3 // 审核驳回
	ProductStatus_PRODUCT_STATUS_SOLD_OUT ProductStatus = 4 // 下架
)

// Enum value maps for ProductStatus.
var (
	ProductStatus_name = map[int32]string{
		0: "PRODUCT_STATUS_DRAFT",
		1: "PRODUCT_STATUS_PENDING",
		2: "PRODUCT_STATUS_APPROVED",
		3: "PRODUCT_STATUS_REJECTED",
		4: "PRODUCT_STATUS_SOLD_OUT",
	}
	ProductStatus_value = map[string]int32{
		"PRODUCT_STATUS_DRAFT":    0,
		"PRODUCT_STATUS_PENDING":  1,
		"PRODUCT_STATUS_APPROVED": 2,
		"PRODUCT_STATUS_REJECTED": 3,
		"PRODUCT_STATUS_SOLD_OUT": 4,
	}
)

func (x ProductStatus) Enum() *ProductStatus {
	p := new(ProductStatus)
	*p = x
	return p
}

func (x ProductStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_product_proto_enumTypes[0].Descriptor()
}

func (ProductStatus) Type() protoreflect.EnumType {
	return &file_v1_product_proto_enumTypes[0]
}

func (x ProductStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductStatus.Descriptor instead.
func (ProductStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{0}
}

// 审核动作枚举
type AuditAction int32

const (
	AuditAction_AUDIT_ACTION_APPROVED AuditAction = 0 // 通过审核
	AuditAction_AUDIT_ACTION_REJECT   AuditAction = 1 // 驳回审核
)

// Enum value maps for AuditAction.
var (
	AuditAction_name = map[int32]string{
		0: "AUDIT_ACTION_APPROVED",
		1: "AUDIT_ACTION_REJECT",
	}
	AuditAction_value = map[string]int32{
		"AUDIT_ACTION_APPROVED": 0,
		"AUDIT_ACTION_REJECT":   1,
	}
)

func (x AuditAction) Enum() *AuditAction {
	p := new(AuditAction)
	*p = x
	return p
}

func (x AuditAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditAction) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_product_proto_enumTypes[1].Descriptor()
}

func (AuditAction) Type() protoreflect.EnumType {
	return &file_v1_product_proto_enumTypes[1]
}

func (x AuditAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditAction.Descriptor instead.
func (AuditAction) EnumDescriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{1}
}

// 前端上传文件所用的HTTP方法
type UploadMethod int32

const (
	UploadMethod_Put  UploadMethod = 0
	UploadMethod_Post UploadMethod = 1
)

// Enum value maps for UploadMethod.
var (
	UploadMethod_name = map[int32]string{
		0: "Put",
		1: "Post",
	}
	UploadMethod_value = map[string]int32{
		"Put":  0,
		"Post": 1,
	}
)

func (x UploadMethod) Enum() *UploadMethod {
	p := new(UploadMethod)
	*p = x
	return p
}

func (x UploadMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_product_proto_enumTypes[2].Descriptor()
}

func (UploadMethod) Type() protoreflect.EnumType {
	return &file_v1_product_proto_enumTypes[2]
}

func (x UploadMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadMethod.Descriptor instead.
func (UploadMethod) EnumDescriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{2}
}

type UpdateInventoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Stock         int32                  `protobuf:"varint,3,opt,name=stock,proto3" json:"stock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInventoryRequest) Reset() {
	*x = UpdateInventoryRequest{}
	mi := &file_v1_product_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryRequest) ProtoMessage() {}

func (x *UpdateInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateInventoryRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateInventoryRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateInventoryRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateInventoryRequest) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type UpdateInventoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Stock         uint32                 `protobuf:"varint,3,opt,name=stock,proto3" json:"stock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInventoryReply) Reset() {
	*x = UpdateInventoryReply{}
	mi := &file_v1_product_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryReply) ProtoMessage() {}

func (x *UpdateInventoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryReply.ProtoReflect.Descriptor instead.
func (*UpdateInventoryReply) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateInventoryReply) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateInventoryReply) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateInventoryReply) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type GetCategoryProductsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    uint32                 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Page          uint32                 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Status        uint32                 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` // 商品状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryProductsRequest) Reset() {
	*x = GetCategoryProductsRequest{}
	mi := &file_v1_product_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryProductsRequest) ProtoMessage() {}

func (x *GetCategoryProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryProductsRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryProductsRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{2}
}

func (x *GetCategoryProductsRequest) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetCategoryProductsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCategoryProductsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetCategoryProductsRequest) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 获取对象存储上传链接
type UploadProductFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        UploadMethod           `protobuf:"varint,1,opt,name=method,proto3,enum=ecommerce.product.v1.UploadMethod" json:"method,omitempty"` // 上传文件所用的HTTP方法
	ContentType   *string                `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3,oneof" json:"content_type,omitempty"`      // 文件的MIME类型
	BucketName    *string                `protobuf:"bytes,3,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"`         // 文件桶名称，如果不填写，将会根据文件名或者MIME类型进行自动解析。
	FilePath      *string                `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3,oneof" json:"file_path,omitempty"`               // 远端的文件路径，可以不填写。
	FileName      *string                `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3,oneof" json:"file_name,omitempty"`               // 文件名，如果不填写，则会生成UUID，有同名文件也会改为UUID。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadProductFileRequest) Reset() {
	*x = UploadProductFileRequest{}
	mi := &file_v1_product_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadProductFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProductFileRequest) ProtoMessage() {}

func (x *UploadProductFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProductFileRequest.ProtoReflect.Descriptor instead.
func (*UploadProductFileRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{3}
}

func (x *UploadProductFileRequest) GetMethod() UploadMethod {
	if x != nil {
		return x.Method
	}
	return UploadMethod_Put
}

func (x *UploadProductFileRequest) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *UploadProductFileRequest) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *UploadProductFileRequest) GetFilePath() string {
	if x != nil && x.FilePath != nil {
		return *x.FilePath
	}
	return ""
}

func (x *UploadProductFileRequest) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

// 获取对象存储上传链接
type UploadProductFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadUrl     string                 `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`          // 文件的上传链接，默认1个小时的过期时间。
	DownloadUrl   string                 `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`    // 文件的下载链接
	BucketName    *string                `protobuf:"bytes,3,opt,name=bucket_name,json=bucketName,proto3,oneof" json:"bucket_name,omitempty"` // 文件桶名称
	ObjectName    string                 `protobuf:"bytes,4,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`       // 文件名
	FormData      map[string]string      `protobuf:"bytes,5,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadProductFileReply) Reset() {
	*x = UploadProductFileReply{}
	mi := &file_v1_product_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadProductFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProductFileReply) ProtoMessage() {}

func (x *UploadProductFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProductFileReply.ProtoReflect.Descriptor instead.
func (*UploadProductFileReply) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{4}
}

func (x *UploadProductFileReply) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *UploadProductFileReply) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *UploadProductFileReply) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *UploadProductFileReply) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *UploadProductFileReply) GetFormData() map[string]string {
	if x != nil {
		return x.FormData
	}
	return nil
}

// 返回随机顺序的商品数据
type ListRandomProductsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Status        uint32                 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 商品状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRandomProductsRequest) Reset() {
	*x = ListRandomProductsRequest{}
	mi := &file_v1_product_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRandomProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRandomProductsRequest) ProtoMessage() {}

func (x *ListRandomProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRandomProductsRequest.ProtoReflect.Descriptor instead.
func (*ListRandomProductsRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{5}
}

func (x *ListRandomProductsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRandomProductsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRandomProductsRequest) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SearchProductRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 将自然语言文本转换为全文搜索查询条件（tsquery 类型），主要功能包括：
	// 词素标准化（Normalization）
	// 移除停用词（的、是、the、a 等）
	// 执行词干提取（running → run，dogs → dog）
	// 逻辑运算符转换
	// 自动用 &（AND）连接词汇
	// 示例："red apple" → 'red' & 'apple'
	// 安全过滤
	// 自动转义特殊字符（! : & 等）
	Query         string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Page          uint32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchProductRequest) Reset() {
	*x = SearchProductRequest{}
	mi := &file_v1_product_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductRequest) ProtoMessage() {}

func (x *SearchProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductRequest.ProtoReflect.Descriptor instead.
func (*SearchProductRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{6}
}

func (x *SearchProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchProductRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchProductRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchProductRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 商品数组
type Products struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Product             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Products) Reset() {
	*x = Products{}
	mi := &file_v1_product_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Products) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Products) ProtoMessage() {}

func (x *Products) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Products.ProtoReflect.Descriptor instead.
func (*Products) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{7}
}

func (x *Products) GetItems() []*Product {
	if x != nil {
		return x.Items
	}
	return nil
}

// 分类名称
type ListProductsByCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProductsByCategoryRequest) Reset() {
	*x = ListProductsByCategoryRequest{}
	mi := &file_v1_product_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductsByCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductsByCategoryRequest) ProtoMessage() {}

func (x *ListProductsByCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductsByCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListProductsByCategoryRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{8}
}

func (x *ListProductsByCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 新增分类验证相关定义
type CategoryInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    uint32                 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName  string                 `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryInfo) Reset() {
	*x = CategoryInfo{}
	mi := &file_v1_product_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryInfo) ProtoMessage() {}

func (x *CategoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryInfo.ProtoReflect.Descriptor instead.
func (*CategoryInfo) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{9}
}

func (x *CategoryInfo) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CategoryInfo) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

// 图片信息
type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                               // 图片URL
	IsPrimary     bool                   `protobuf:"varint,2,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"` // 是否主图
	SortOrder     int32                  `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"` // 排序顺序
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_v1_product_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{10}
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *Image) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

type Inventory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Stock         uint32                 `protobuf:"varint,3,opt,name=stock,proto3" json:"stock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	mi := &file_v1_product_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{11}
}

func (x *Inventory) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Inventory) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Inventory) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

// 商品核心数据结构
type Product struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 商品唯一ID（系统生成）
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                               // 商品名称
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                 // 商品描述
	Price       float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`                           // 商品价格（单位：元）
	Status      uint32                 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                          // 当前状态
	MerchantId  string                 `protobuf:"bytes,7,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 所属商家ID
	Images      []*Image               `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`                           // 商品图片列表
	// 商品属性（使用 JSON 格式存储）
	Attributes *structpb.Value `protobuf:"bytes,9,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// 审核信息（仅当处于审核状态时有效）
	AuditInfo *AuditInfo `protobuf:"bytes,10,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	// 时间戳
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Category  *CategoryInfo          `protobuf:"bytes,13,opt,name=category,proto3" json:"category,omitempty"`
	// 库存信息
	Inventory     *Inventory `protobuf:"bytes,14,opt,name=inventory,proto3" json:"inventory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Product) Reset() {
	*x = Product{}
	mi := &file_v1_product_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{12}
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Product) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Product) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Product) GetAttributes() *structpb.Value {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Product) GetAuditInfo() *AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

func (x *Product) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Product) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Product) GetCategory() *CategoryInfo {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Product) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

// 创建商品的返回值
type CreateProductReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 商品唯一ID（系统生成）
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProductReply) Reset() {
	*x = CreateProductReply{}
	mi := &file_v1_product_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductReply) ProtoMessage() {}

func (x *CreateProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductReply.ProtoReflect.Descriptor instead.
func (*CreateProductReply) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{13}
}

func (x *CreateProductReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProductReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateProductReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 审核信息
type AuditInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       string                 `protobuf:"bytes,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`          // 审核记录ID
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                           // 审核意见/驳回原因
	OperatorId    string                 `protobuf:"bytes,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 操作人ID
	OperatedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=operated_at,json=operatedAt,proto3" json:"operated_at,omitempty"` // 操作时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditInfo) Reset() {
	*x = AuditInfo{}
	mi := &file_v1_product_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditInfo) ProtoMessage() {}

func (x *AuditInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditInfo.ProtoReflect.Descriptor instead.
func (*AuditInfo) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{14}
}

func (x *AuditInfo) GetAuditId() string {
	if x != nil {
		return x.AuditId
	}
	return ""
}

func (x *AuditInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AuditInfo) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *AuditInfo) GetOperatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OperatedAt
	}
	return nil
}

// 创建商品请求
type CreateProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // 商品名称
	Price         float64                `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`           // 商品价格（单位：元
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // 商品描述
	Stock         uint32                 `protobuf:"varint,4,opt,name=stock,proto3" json:"stock,omitempty"`            // 商品库存
	Images        []*Image               `protobuf:"bytes,5,rep,name=images,proto3" json:"images,omitempty"`           // 商品图片列表
	Attributes    *structpb.Value        `protobuf:"bytes,6,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Category      *CategoryInfo          `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	mi := &file_v1_product_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{15}
}

func (x *CreateProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProductRequest) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CreateProductRequest) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateProductRequest) GetAttributes() *structpb.Value {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateProductRequest) GetCategory() *CategoryInfo {
	if x != nil {
		return x.Category
	}
	return nil
}

type CreateProductBatchRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Products      []*CreateProductRequest `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProductBatchRequest) Reset() {
	*x = CreateProductBatchRequest{}
	mi := &file_v1_product_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductBatchRequest) ProtoMessage() {}

func (x *CreateProductBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateProductBatchRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{16}
}

func (x *CreateProductBatchRequest) GetProducts() []*CreateProductRequest {
	if x != nil {
		return x.Products
	}
	return nil
}

type BatchProductError struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Index           int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                                           // 原始请求列表中的索引
	ErrorMessage    string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`          // 错误信息
	OriginalProduct *Product               `protobuf:"bytes,3,opt,name=original_product,json=originalProduct,proto3" json:"original_product,omitempty"` // 导致错误的原始商品数据
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchProductError) Reset() {
	*x = BatchProductError{}
	mi := &file_v1_product_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchProductError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProductError) ProtoMessage() {}

func (x *BatchProductError) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProductError.ProtoReflect.Descriptor instead.
func (*BatchProductError) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{17}
}

func (x *BatchProductError) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BatchProductError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BatchProductError) GetOriginalProduct() *Product {
	if x != nil {
		return x.OriginalProduct
	}
	return nil
}

type CreateProductBatchReply struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	SuccessCount  uint32                                       `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailedCount   uint32                                       `protobuf:"varint,2,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	Errors        []*CreateProductBatchReply_BatchProductError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProductBatchReply) Reset() {
	*x = CreateProductBatchReply{}
	mi := &file_v1_product_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductBatchReply) ProtoMessage() {}

func (x *CreateProductBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductBatchReply.ProtoReflect.Descriptor instead.
func (*CreateProductBatchReply) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{18}
}

func (x *CreateProductBatchReply) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *CreateProductBatchReply) GetFailedCount() uint32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *CreateProductBatchReply) GetErrors() []*CreateProductBatchReply_BatchProductError {
	if x != nil {
		return x.Errors
	}
	return nil
}

// 提交审核请求
type SubmitAuditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAuditRequest) Reset() {
	*x = SubmitAuditRequest{}
	mi := &file_v1_product_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAuditRequest) ProtoMessage() {}

func (x *SubmitAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAuditRequest.ProtoReflect.Descriptor instead.
func (*SubmitAuditRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{19}
}

func (x *SubmitAuditRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

// 审核操作请求
type AuditProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Action        AuditAction            `protobuf:"varint,3,opt,name=action,proto3,enum=ecommerce.product.v1.AuditAction" json:"action,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"` // 审核消息
	OperatorId    string                 `protobuf:"bytes,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditProductRequest) Reset() {
	*x = AuditProductRequest{}
	mi := &file_v1_product_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditProductRequest) ProtoMessage() {}

func (x *AuditProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditProductRequest.ProtoReflect.Descriptor instead.
func (*AuditProductRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{20}
}

func (x *AuditProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AuditProductRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *AuditProductRequest) GetAction() AuditAction {
	if x != nil {
		return x.Action
	}
	return AuditAction_AUDIT_ACTION_APPROVED
}

func (x *AuditProductRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AuditProductRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

// 查询单个商品请求
type GetProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductRequest) Reset() {
	*x = GetProductRequest{}
	mi := &file_v1_product_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRequest) ProtoMessage() {}

func (x *GetProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRequest.ProtoReflect.Descriptor instead.
func (*GetProductRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{21}
}

func (x *GetProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetProductRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

type GetProductsBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductIds    []string               `protobuf:"bytes,1,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
	MerchantIds   []string               `protobuf:"bytes,2,rep,name=merchant_ids,json=merchantIds,proto3" json:"merchant_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductsBatchRequest) Reset() {
	*x = GetProductsBatchRequest{}
	mi := &file_v1_product_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductsBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsBatchRequest) ProtoMessage() {}

func (x *GetProductsBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsBatchRequest.ProtoReflect.Descriptor instead.
func (*GetProductsBatchRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{22}
}

func (x *GetProductsBatchRequest) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

func (x *GetProductsBatchRequest) GetMerchantIds() []string {
	if x != nil {
		return x.MerchantIds
	}
	return nil
}

// 删除商品请求
type DeleteProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 商品 ID
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商家 ID
	Status        uint32                 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                          // 商品状态, 默认删除状态为4, 即下架状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	mi := &file_v1_product_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteProductRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *DeleteProductRequest) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 审核记录返回结构
type AuditRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId     string                 `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	OldStatus     uint32                 `protobuf:"varint,3,opt,name=old_status,json=oldStatus,proto3" json:"old_status,omitempty"`
	NewStatus     uint32                 `protobuf:"varint,4,opt,name=new_status,json=newStatus,proto3" json:"new_status,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	OperatorId    string                 `protobuf:"bytes,6,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	OperatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=operated_at,json=operatedAt,proto3" json:"operated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditRecord) Reset() {
	*x = AuditRecord{}
	mi := &file_v1_product_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRecord) ProtoMessage() {}

func (x *AuditRecord) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRecord.ProtoReflect.Descriptor instead.
func (*AuditRecord) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{24}
}

func (x *AuditRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditRecord) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AuditRecord) GetOldStatus() uint32 {
	if x != nil {
		return x.OldStatus
	}
	return 0
}

func (x *AuditRecord) GetNewStatus() uint32 {
	if x != nil {
		return x.NewStatus
	}
	return 0
}

func (x *AuditRecord) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AuditRecord) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *AuditRecord) GetOperatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OperatedAt
	}
	return nil
}

type CreateProductBatchReply_BatchProductError struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Index           uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	OriginalProduct *CreateProductRequest  `protobuf:"bytes,3,opt,name=original_product,json=originalProduct,proto3" json:"original_product,omitempty"` // 原始商品信息
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateProductBatchReply_BatchProductError) Reset() {
	*x = CreateProductBatchReply_BatchProductError{}
	mi := &file_v1_product_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductBatchReply_BatchProductError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductBatchReply_BatchProductError) ProtoMessage() {}

func (x *CreateProductBatchReply_BatchProductError) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductBatchReply_BatchProductError.ProtoReflect.Descriptor instead.
func (*CreateProductBatchReply_BatchProductError) Descriptor() ([]byte, []int) {
	return file_v1_product_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CreateProductBatchReply_BatchProductError) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateProductBatchReply_BatchProductError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProductBatchReply_BatchProductError) GetOriginalProduct() *CreateProductRequest {
	if x != nil {
		return x.OriginalProduct
	}
	return nil
}

var File_v1_product_proto protoreflect.FileDescriptor

const file_v1_product_proto_rawDesc = "" +
	"\n" +
	"\x10v1/product.proto\x12\x14ecommerce.product.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x17validate/validate.proto\x1a\x1copenapi/v3/annotations.proto\"n\n" +
	"\x16UpdateInventoryRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12\x14\n" +
	"\x05stock\x18\x03 \x01(\x05R\x05stock\"l\n" +
	"\x14UpdateInventoryReply\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12\x14\n" +
	"\x05stock\x18\x03 \x01(\rR\x05stock\"\x86\x01\n" +
	"\x1aGetCategoryProductsRequest\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\rR\n" +
	"categoryId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\rR\bpageSize\x12\x16\n" +
	"\x06status\x18\x04 \x01(\rR\x06status\"\xe5\x04\n" +
	"\x18UploadProductFileRequest\x12t\n" +
	"\x06method\x18\x01 \x01(\x0e2\".ecommerce.product.v1.UploadMethodB8\xbaG5\x92\x022上传文件所用的HTTP方法，支持POST和PUTR\x06method\x12A\n" +
	"\fcontent_type\x18\x02 \x01(\tB\x19\xbaG\x16\x92\x02\x13文件的MIME类型H\x00R\vcontentType\x88\x01\x01\x12\x87\x01\n" +
	"\vbucket_name\x18\x03 \x01(\tBa\xbaG^\x92\x02[文件桶名称，如果不填写，将会根据文件名或者MIME类型进行自动解析H\x01R\n" +
	"bucketName\x88\x01\x01\x12O\n" +
	"\tfile_path\x18\x04 \x01(\tB-\xbaG*\x92\x02'远端的文件路径，可以不填写H\x02R\bfilePath\x88\x01\x01\x12x\n" +
	"\tfile_name\x18\x05 \x01(\tBV\xbaGS\x92\x02P文件名，如果不填写，则会生成UUID，有同名文件也会改为UUIDH\x03R\bfileName\x88\x01\x01B\x0f\n" +
	"\r_content_typeB\x0e\n" +
	"\f_bucket_nameB\f\n" +
	"\n" +
	"_file_pathB\f\n" +
	"\n" +
	"_file_name\"\xfc\x03\n" +
	"\x16UploadProductFileReply\x12\\\n" +
	"\n" +
	"upload_url\x18\x01 \x01(\tB=\xbaG:\x92\x027文件的上传链接，默认1个小时的过期时间R\tuploadUrl\x12>\n" +
	"\fdownload_url\x18\x02 \x01(\tB\x1b\xbaG\x18\x92\x02\x15文件的下载链接R\vdownloadUrl\x12;\n" +
	"\vbucket_name\x18\x03 \x01(\tB\x15\xbaG\x12\x92\x02\x0f文件桶名称H\x00R\n" +
	"bucketName\x88\x01\x01\x120\n" +
	"\vobject_name\x18\x04 \x01(\tB\x0f\xbaG\f\x92\x02\t文件名R\n" +
	"objectName\x12\x87\x01\n" +
	"\tform_data\x18\x05 \x03(\v2:.ecommerce.product.v1.UploadProductFileReply.FormDataEntryB.\xbaG+\x92\x02(表单数据，使用POST方法时填写R\bformData\x1a;\n" +
	"\rFormDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_bucket_name\"d\n" +
	"\x19ListRandomProductsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x12\x16\n" +
	"\x06status\x18\x03 \x01(\rR\x06status\"\x9b\x01\n" +
	"\x14SearchProductRequest\x12\x1e\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x04name\x12 \n" +
	"\x05query\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x05query\x12\x1b\n" +
	"\x04page\x18\x03 \x01(\rB\a\xfaB\x04*\x02 \x00R\x04page\x12$\n" +
	"\tpage_size\x18\x04 \x01(\rB\a\xfaB\x04*\x02 \x00R\bpageSize\"?\n" +
	"\bProducts\x123\n" +
	"\x05items\x18\x01 \x03(\v2\x1d.ecommerce.product.v1.ProductR\x05items\"3\n" +
	"\x1dListProductsByCategoryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"]\n" +
	"\fCategoryInfo\x12(\n" +
	"\vcategory_id\x18\x01 \x01(\rB\a\xfaB\x04*\x02 \x01R\n" +
	"categoryId\x12#\n" +
	"\rcategory_name\x18\x02 \x01(\tR\fcategoryName\"W\n" +
	"\x05Image\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x02 \x01(\bR\tisPrimary\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x03 \x01(\x05R\tsortOrder\"\xc6\x01\n" +
	"\tInventory\x12:\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tB\x1b\xfaB\n" +
	"r\b\x10\x01\x18\xc8\x01\xb0\x01\x01\xbaG\v\x92\x02\b商品IDR\tproductId\x12<\n" +
	"\vmerchant_id\x18\x02 \x01(\tB\x1b\xfaB\n" +
	"r\b\x10\x01\x18\xc8\x01\xb0\x01\x01\xbaG\v\x92\x02\b商家IDR\n" +
	"merchantId\x12?\n" +
	"\x05stock\x18\x03 \x01(\rB)\xfaB\x04*\x02 \x00\xbaG\x1f\x92\x02\x1c库存数量，必须大于0R\x05stock\"\xe2\x04\n" +
	"\aProduct\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x02\x18\xc8\x01R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x02\x18\xc8\x01R\x04name\x12*\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xfaB\x05r\x03\x18\xd0\x0fR\vdescription\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x16\n" +
	"\x06status\x18\x06 \x01(\rR\x06status\x12\x1f\n" +
	"\vmerchant_id\x18\a \x01(\tR\n" +
	"merchantId\x123\n" +
	"\x06images\x18\b \x03(\v2\x1b.ecommerce.product.v1.ImageR\x06images\x126\n" +
	"\n" +
	"attributes\x18\t \x01(\v2\x16.google.protobuf.ValueR\n" +
	"attributes\x12>\n" +
	"\n" +
	"audit_info\x18\n" +
	" \x01(\v2\x1f.ecommerce.product.v1.AuditInfoR\tauditInfo\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12>\n" +
	"\bcategory\x18\r \x01(\v2\".ecommerce.product.v1.CategoryInfoR\bcategory\x12=\n" +
	"\tinventory\x18\x0e \x01(\v2\x1f.ecommerce.product.v1.InventoryR\tinventory\"\x9a\x01\n" +
	"\x12CreateProductReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x9c\x01\n" +
	"\tAuditInfo\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\tR\aauditId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1f\n" +
	"\voperator_id\x18\x03 \x01(\tR\n" +
	"operatorId\x12;\n" +
	"\voperated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"operatedAt\"\xaf\x02\n" +
	"\x14CreateProductRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x01R\x05price\x12*\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xfaB\x05r\x03\x18\xd0\x0fR\vdescription\x12\x14\n" +
	"\x05stock\x18\x04 \x01(\rR\x05stock\x123\n" +
	"\x06images\x18\x05 \x03(\v2\x1b.ecommerce.product.v1.ImageR\x06images\x126\n" +
	"\n" +
	"attributes\x18\x06 \x01(\v2\x16.google.protobuf.ValueR\n" +
	"attributes\x12>\n" +
	"\bcategory\x18\a \x01(\v2\".ecommerce.product.v1.CategoryInfoR\bcategory\"c\n" +
	"\x19CreateProductBatchRequest\x12F\n" +
	"\bproducts\x18\x01 \x03(\v2*.ecommerce.product.v1.CreateProductRequestR\bproducts\"\x98\x01\n" +
	"\x11BatchProductError\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12H\n" +
	"\x10original_product\x18\x03 \x01(\v2\x1d.ecommerce.product.v1.ProductR\x0foriginalProduct\"\xd7\x02\n" +
	"\x17CreateProductBatchReply\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\rR\fsuccessCount\x12!\n" +
	"\ffailed_count\x18\x02 \x01(\rR\vfailedCount\x12W\n" +
	"\x06errors\x18\x03 \x03(\v2?.ecommerce.product.v1.CreateProductBatchReply.BatchProductErrorR\x06errors\x1a\x9a\x01\n" +
	"\x11BatchProductError\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12U\n" +
	"\x10original_product\x18\x03 \x01(\v2*.ecommerce.product.v1.CreateProductRequestR\x0foriginalProduct\"3\n" +
	"\x12SubmitAuditRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\"\xc9\x01\n" +
	"\x13AuditProductRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x129\n" +
	"\x06action\x18\x03 \x01(\x0e2!.ecommerce.product.v1.AuditActionR\x06action\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x1f\n" +
	"\voperator_id\x18\x05 \x01(\tR\n" +
	"operatorId\"D\n" +
	"\x11GetProductRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\"]\n" +
	"\x17GetProductsBatchRequest\x12\x1f\n" +
	"\vproduct_ids\x18\x01 \x03(\tR\n" +
	"productIds\x12!\n" +
	"\fmerchant_ids\x18\x02 \x03(\tR\vmerchantIds\"_\n" +
	"\x14DeleteProductRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\rR\x06status\"\xf0\x01\n" +
	"\vAuditRecord\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\tR\tproductId\x12\x1d\n" +
	"\n" +
	"old_status\x18\x03 \x01(\rR\toldStatus\x12\x1d\n" +
	"\n" +
	"new_status\x18\x04 \x01(\rR\tnewStatus\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12\x1f\n" +
	"\voperator_id\x18\x06 \x01(\tR\n" +
	"operatorId\x12;\n" +
	"\voperated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"operatedAt*\x9c\x01\n" +
	"\rProductStatus\x12\x18\n" +
	"\x14PRODUCT_STATUS_DRAFT\x10\x00\x12\x1a\n" +
	"\x16PRODUCT_STATUS_PENDING\x10\x01\x12\x1b\n" +
	"\x17PRODUCT_STATUS_APPROVED\x10\x02\x12\x1b\n" +
	"\x17PRODUCT_STATUS_REJECTED\x10\x03\x12\x1b\n" +
	"\x17PRODUCT_STATUS_SOLD_OUT\x10\x04*A\n" +
	"\vAuditAction\x12\x19\n" +
	"\x15AUDIT_ACTION_APPROVED\x10\x00\x12\x17\n" +
	"\x13AUDIT_ACTION_REJECT\x10\x01*!\n" +
	"\fUploadMethod\x12\a\n" +
	"\x03Put\x10\x00\x12\b\n" +
	"\x04Post\x10\x012\xa5\x0f\n" +
	"\x0eProductService\x12\x95\x01\n" +
	"\x11UploadProductFile\x12..ecommerce.product.v1.UploadProductFileRequest\x1a,.ecommerce.product.v1.UploadProductFileReply\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/products/uploadfile\x12~\n" +
	"\rCreateProduct\x12*.ecommerce.product.v1.CreateProductRequest\x1a(.ecommerce.product.v1.CreateProductReply\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/products\x12\x8d\x01\n" +
	"\x12CreateProductBatch\x12/.ecommerce.product.v1.CreateProductBatchRequest\x1a-.ecommerce.product.v1.CreateProductBatchReply\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\x1a\f/v1/products\x12\x90\x01\n" +
	"\x0eSubmitForAudit\x12(.ecommerce.product.v1.SubmitAuditRequest\x1a!.ecommerce.product.v1.AuditRecord\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v1/products/{product_id}/submit-audit\x12\x88\x01\n" +
	"\fAuditProduct\x12).ecommerce.product.v1.AuditProductRequest\x1a!.ecommerce.product.v1.AuditRecord\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/v1/products/{product_id}/audit\x12{\n" +
	"\x12ListRandomProducts\x12/.ecommerce.product.v1.ListRandomProductsRequest\x1a\x1e.ecommerce.product.v1.Products\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/products\x12\x94\x01\n" +
	"\x13GetCategoryProducts\x120.ecommerce.product.v1.GetCategoryProductsRequest\x1a\x1e.ecommerce.product.v1.Products\"+\x82\xd3\xe4\x93\x02%\x12#/v1/products/category/{category_id}\x12\xae\x01\n" +
	"\x1fGetCategoryWithChildrenProducts\x120.ecommerce.product.v1.GetCategoryProductsRequest\x1a\x1e.ecommerce.product.v1.Products\"9\x82\xd3\xe4\x93\x023\x121/v1/products/category/{category_id}/with-children\x12}\n" +
	"\x10GetProductsBatch\x12-.ecommerce.product.v1.GetProductsBatchRequest\x1a\x1e.ecommerce.product.v1.Products\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/products/batch\x12\x8e\x01\n" +
	"\x0fUpdateInventory\x12,.ecommerce.product.v1.UpdateInventoryRequest\x1a*.ecommerce.product.v1.UpdateInventoryReply\"!\x82\xd3\xe4\x93\x02\x1b:\x01*2\x16/v1/products/inventory\x12o\n" +
	"\n" +
	"GetProduct\x12'.ecommerce.product.v1.GetProductRequest\x1a\x1d.ecommerce.product.v1.Product\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/products/{id}\x12\x7f\n" +
	"\x14SearchProductsByName\x12*.ecommerce.product.v1.SearchProductRequest\x1a\x1e.ecommerce.product.v1.Products\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/products/{name}\x12\x95\x01\n" +
	"\x16ListProductsByCategory\x123.ecommerce.product.v1.ListProductsByCategoryRequest\x1a\x1e.ecommerce.product.v1.Products\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/products/categories/{name}\x12n\n" +
	"\rDeleteProduct\x12*.ecommerce.product.v1.DeleteProductRequest\x1a\x16.google.protobuf.Empty\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/products/{id}B\"Z backend/api/product/v1;productv1b\x06proto3"

var (
	file_v1_product_proto_rawDescOnce sync.Once
	file_v1_product_proto_rawDescData []byte
)

func file_v1_product_proto_rawDescGZIP() []byte {
	file_v1_product_proto_rawDescOnce.Do(func() {
		file_v1_product_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_product_proto_rawDesc), len(file_v1_product_proto_rawDesc)))
	})
	return file_v1_product_proto_rawDescData
}

var file_v1_product_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_v1_product_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_v1_product_proto_goTypes = []any{
	(ProductStatus)(0),                                // 0: ecommerce.product.v1.ProductStatus
	(AuditAction)(0),                                  // 1: ecommerce.product.v1.AuditAction
	(UploadMethod)(0),                                 // 2: ecommerce.product.v1.UploadMethod
	(*UpdateInventoryRequest)(nil),                    // 3: ecommerce.product.v1.UpdateInventoryRequest
	(*UpdateInventoryReply)(nil),                      // 4: ecommerce.product.v1.UpdateInventoryReply
	(*GetCategoryProductsRequest)(nil),                // 5: ecommerce.product.v1.GetCategoryProductsRequest
	(*UploadProductFileRequest)(nil),                  // 6: ecommerce.product.v1.UploadProductFileRequest
	(*UploadProductFileReply)(nil),                    // 7: ecommerce.product.v1.UploadProductFileReply
	(*ListRandomProductsRequest)(nil),                 // 8: ecommerce.product.v1.ListRandomProductsRequest
	(*SearchProductRequest)(nil),                      // 9: ecommerce.product.v1.SearchProductRequest
	(*Products)(nil),                                  // 10: ecommerce.product.v1.Products
	(*ListProductsByCategoryRequest)(nil),             // 11: ecommerce.product.v1.ListProductsByCategoryRequest
	(*CategoryInfo)(nil),                              // 12: ecommerce.product.v1.CategoryInfo
	(*Image)(nil),                                     // 13: ecommerce.product.v1.Image
	(*Inventory)(nil),                                 // 14: ecommerce.product.v1.Inventory
	(*Product)(nil),                                   // 15: ecommerce.product.v1.Product
	(*CreateProductReply)(nil),                        // 16: ecommerce.product.v1.CreateProductReply
	(*AuditInfo)(nil),                                 // 17: ecommerce.product.v1.AuditInfo
	(*CreateProductRequest)(nil),                      // 18: ecommerce.product.v1.CreateProductRequest
	(*CreateProductBatchRequest)(nil),                 // 19: ecommerce.product.v1.CreateProductBatchRequest
	(*BatchProductError)(nil),                         // 20: ecommerce.product.v1.BatchProductError
	(*CreateProductBatchReply)(nil),                   // 21: ecommerce.product.v1.CreateProductBatchReply
	(*SubmitAuditRequest)(nil),                        // 22: ecommerce.product.v1.SubmitAuditRequest
	(*AuditProductRequest)(nil),                       // 23: ecommerce.product.v1.AuditProductRequest
	(*GetProductRequest)(nil),                         // 24: ecommerce.product.v1.GetProductRequest
	(*GetProductsBatchRequest)(nil),                   // 25: ecommerce.product.v1.GetProductsBatchRequest
	(*DeleteProductRequest)(nil),                      // 26: ecommerce.product.v1.DeleteProductRequest
	(*AuditRecord)(nil),                               // 27: ecommerce.product.v1.AuditRecord
	nil,                                               // 28: ecommerce.product.v1.UploadProductFileReply.FormDataEntry
	(*CreateProductBatchReply_BatchProductError)(nil), // 29: ecommerce.product.v1.CreateProductBatchReply.BatchProductError
	(*structpb.Value)(nil),                            // 30: google.protobuf.Value
	(*timestamppb.Timestamp)(nil),                     // 31: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                             // 32: google.protobuf.Empty
}
var file_v1_product_proto_depIdxs = []int32{
	2,  // 0: ecommerce.product.v1.UploadProductFileRequest.method:type_name -> ecommerce.product.v1.UploadMethod
	28, // 1: ecommerce.product.v1.UploadProductFileReply.form_data:type_name -> ecommerce.product.v1.UploadProductFileReply.FormDataEntry
	15, // 2: ecommerce.product.v1.Products.items:type_name -> ecommerce.product.v1.Product
	13, // 3: ecommerce.product.v1.Product.images:type_name -> ecommerce.product.v1.Image
	30, // 4: ecommerce.product.v1.Product.attributes:type_name -> google.protobuf.Value
	17, // 5: ecommerce.product.v1.Product.audit_info:type_name -> ecommerce.product.v1.AuditInfo
	31, // 6: ecommerce.product.v1.Product.created_at:type_name -> google.protobuf.Timestamp
	31, // 7: ecommerce.product.v1.Product.updated_at:type_name -> google.protobuf.Timestamp
	12, // 8: ecommerce.product.v1.Product.category:type_name -> ecommerce.product.v1.CategoryInfo
	14, // 9: ecommerce.product.v1.Product.inventory:type_name -> ecommerce.product.v1.Inventory
	31, // 10: ecommerce.product.v1.CreateProductReply.created_at:type_name -> google.protobuf.Timestamp
	31, // 11: ecommerce.product.v1.CreateProductReply.updated_at:type_name -> google.protobuf.Timestamp
	31, // 12: ecommerce.product.v1.AuditInfo.operated_at:type_name -> google.protobuf.Timestamp
	13, // 13: ecommerce.product.v1.CreateProductRequest.images:type_name -> ecommerce.product.v1.Image
	30, // 14: ecommerce.product.v1.CreateProductRequest.attributes:type_name -> google.protobuf.Value
	12, // 15: ecommerce.product.v1.CreateProductRequest.category:type_name -> ecommerce.product.v1.CategoryInfo
	18, // 16: ecommerce.product.v1.CreateProductBatchRequest.products:type_name -> ecommerce.product.v1.CreateProductRequest
	15, // 17: ecommerce.product.v1.BatchProductError.original_product:type_name -> ecommerce.product.v1.Product
	29, // 18: ecommerce.product.v1.CreateProductBatchReply.errors:type_name -> ecommerce.product.v1.CreateProductBatchReply.BatchProductError
	1,  // 19: ecommerce.product.v1.AuditProductRequest.action:type_name -> ecommerce.product.v1.AuditAction
	31, // 20: ecommerce.product.v1.AuditRecord.operated_at:type_name -> google.protobuf.Timestamp
	18, // 21: ecommerce.product.v1.CreateProductBatchReply.BatchProductError.original_product:type_name -> ecommerce.product.v1.CreateProductRequest
	6,  // 22: ecommerce.product.v1.ProductService.UploadProductFile:input_type -> ecommerce.product.v1.UploadProductFileRequest
	18, // 23: ecommerce.product.v1.ProductService.CreateProduct:input_type -> ecommerce.product.v1.CreateProductRequest
	19, // 24: ecommerce.product.v1.ProductService.CreateProductBatch:input_type -> ecommerce.product.v1.CreateProductBatchRequest
	22, // 25: ecommerce.product.v1.ProductService.SubmitForAudit:input_type -> ecommerce.product.v1.SubmitAuditRequest
	23, // 26: ecommerce.product.v1.ProductService.AuditProduct:input_type -> ecommerce.product.v1.AuditProductRequest
	8,  // 27: ecommerce.product.v1.ProductService.ListRandomProducts:input_type -> ecommerce.product.v1.ListRandomProductsRequest
	5,  // 28: ecommerce.product.v1.ProductService.GetCategoryProducts:input_type -> ecommerce.product.v1.GetCategoryProductsRequest
	5,  // 29: ecommerce.product.v1.ProductService.GetCategoryWithChildrenProducts:input_type -> ecommerce.product.v1.GetCategoryProductsRequest
	25, // 30: ecommerce.product.v1.ProductService.GetProductsBatch:input_type -> ecommerce.product.v1.GetProductsBatchRequest
	3,  // 31: ecommerce.product.v1.ProductService.UpdateInventory:input_type -> ecommerce.product.v1.UpdateInventoryRequest
	24, // 32: ecommerce.product.v1.ProductService.GetProduct:input_type -> ecommerce.product.v1.GetProductRequest
	9,  // 33: ecommerce.product.v1.ProductService.SearchProductsByName:input_type -> ecommerce.product.v1.SearchProductRequest
	11, // 34: ecommerce.product.v1.ProductService.ListProductsByCategory:input_type -> ecommerce.product.v1.ListProductsByCategoryRequest
	26, // 35: ecommerce.product.v1.ProductService.DeleteProduct:input_type -> ecommerce.product.v1.DeleteProductRequest
	7,  // 36: ecommerce.product.v1.ProductService.UploadProductFile:output_type -> ecommerce.product.v1.UploadProductFileReply
	16, // 37: ecommerce.product.v1.ProductService.CreateProduct:output_type -> ecommerce.product.v1.CreateProductReply
	21, // 38: ecommerce.product.v1.ProductService.CreateProductBatch:output_type -> ecommerce.product.v1.CreateProductBatchReply
	27, // 39: ecommerce.product.v1.ProductService.SubmitForAudit:output_type -> ecommerce.product.v1.AuditRecord
	27, // 40: ecommerce.product.v1.ProductService.AuditProduct:output_type -> ecommerce.product.v1.AuditRecord
	10, // 41: ecommerce.product.v1.ProductService.ListRandomProducts:output_type -> ecommerce.product.v1.Products
	10, // 42: ecommerce.product.v1.ProductService.GetCategoryProducts:output_type -> ecommerce.product.v1.Products
	10, // 43: ecommerce.product.v1.ProductService.GetCategoryWithChildrenProducts:output_type -> ecommerce.product.v1.Products
	10, // 44: ecommerce.product.v1.ProductService.GetProductsBatch:output_type -> ecommerce.product.v1.Products
	4,  // 45: ecommerce.product.v1.ProductService.UpdateInventory:output_type -> ecommerce.product.v1.UpdateInventoryReply
	15, // 46: ecommerce.product.v1.ProductService.GetProduct:output_type -> ecommerce.product.v1.Product
	10, // 47: ecommerce.product.v1.ProductService.SearchProductsByName:output_type -> ecommerce.product.v1.Products
	10, // 48: ecommerce.product.v1.ProductService.ListProductsByCategory:output_type -> ecommerce.product.v1.Products
	32, // 49: ecommerce.product.v1.ProductService.DeleteProduct:output_type -> google.protobuf.Empty
	36, // [36:50] is the sub-list for method output_type
	22, // [22:36] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_v1_product_proto_init() }
func file_v1_product_proto_init() {
	if File_v1_product_proto != nil {
		return
	}
	file_v1_product_proto_msgTypes[3].OneofWrappers = []any{}
	file_v1_product_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_product_proto_rawDesc), len(file_v1_product_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_product_proto_goTypes,
		DependencyIndexes: file_v1_product_proto_depIdxs,
		EnumInfos:         file_v1_product_proto_enumTypes,
		MessageInfos:      file_v1_product_proto_msgTypes,
	}.Build()
	File_v1_product_proto = out.File
	file_v1_product_proto_goTypes = nil
	file_v1_product_proto_depIdxs = nil
}
