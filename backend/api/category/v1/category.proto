syntax = "proto3";

// 定义包名，用于区分不同的服务模块。
package ecommerce.category.v1;

// 指定 Go 语言生成的代码包路径。
option go_package = "backend/api/category/v1;categoryv1";

import "google/api/annotations.proto"; // 用于定义 HTTP 映射规则。
import "google/protobuf/timestamp.proto"; // 用于处理时间戳。
import "google/protobuf/empty.proto"; // 用于表示空响应。

// 分类服务
service CategoryService {
  rpc CreateCategory(CreateCategoryRequest) returns (Category) {
    option (google.api.http) = {
      post: "/v1/categories"
      body: "*"
    };
  }

  rpc GetCategory(GetCategoryRequest) returns (Category) {
    option (google.api.http) = {
      get: "/v1/categories/{id}"
    };
  }

  rpc UpdateCategory(UpdateCategoryRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/categories/{id}"
      body: "*"
    };
  }

  rpc DeleteCategory(DeleteCategoryRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/categories/{id}"
    };
  }

  rpc GetSubTree(GetSubTreeRequest) returns (Categories) {
    option (google.api.http) = {
      get: "/v1/categories/{root_id}/subtree"
    };
  }

  rpc GetCategoryPath(GetCategoryPathRequest) returns (Categories) {
    option (google.api.http) = {
      get: "/v1/categories/{category_id}/path"
    };
  }

  rpc GetLeafCategories(google.protobuf.Empty) returns (Categories) {
    option (google.api.http) = {
      get: "/v1/categories/leaves"
    };
  }

  rpc GetClosureRelations(GetClosureRequest) returns (ClosureRelations) {
    option (google.api.http) = {
      get: "/v1/categories/{category_id}/closure"
    };
  }

  // Note: UpdateClosureDepth may require transaction and complex operations
  rpc UpdateClosureDepth(UpdateClosureDepthRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/v1/categories/{category_id}/closure"
      body: "*"
    };
  }
}

message Categories {
    repeated Category categories = 1;
}

message Category {
  int64 id = 1;
  int64 parent_id = 2;  // 0 represents root in proto (stored as NULL in DB)
  int32 level = 3;      // 0-3
  string path = 4;      // ltree path
  string name = 5;
  int32 sort_order = 6;
  bool is_leaf = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message ClosureRelations {
  repeated ClosureRelation relations = 1;
}

message ClosureRelation {
  int64 ancestor = 1;
  int64 descendant = 2;
  int32 depth = 3;
}

// 请求/响应消息

// 创建分类请求
message CreateCategoryRequest {
  int64 parent_id = 1; // 父分类的 ID，根节点的 parent_id 为 0。
  string name = 2; // 分类名称。
  int32 sort_order = 3; // 排序值。
}

// 获取单个分类请求
message GetCategoryRequest {
  uint64 id = 1; // 分类的唯一标识符。
}

// 更新分类请求
message UpdateCategoryRequest {
  uint64 id = 1; // 分类的唯一标识符。
  string name = 2; // 新的分类名称。
}

// 删除分类请求
message DeleteCategoryRequest {
  uint64 id = 1; // 分类的唯一标识符。
}

// 获取子树请求
message GetSubTreeRequest {
  uint64 root_id = 1; // 根节点的 ID，用于获取其子树。
}

// 获取分类路径请求
message GetCategoryPathRequest {
  uint64 category_id = 1; // 分类的唯一标识符，用于获取其完整路径。
}

// 获取闭包关系请求
message GetClosureRequest {
  uint64 category_id = 1; // 分类的唯一标识符，用于获取其闭包关系。
}

// 更新闭包关系深度请求
message UpdateClosureDepthRequest {
  int64 category_id = 1; // 分类的唯一标识符。
  string name = 2;
}
