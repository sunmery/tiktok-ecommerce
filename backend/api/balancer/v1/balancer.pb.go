// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/balancer.proto

package balancerv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 货币枚举
type Currency int32

const (
	Currency_CURRENCY_UNSPECIFIED Currency = 0
	Currency_CNY                  Currency = 1 // 人民币
	Currency_USD                  Currency = 2 // 美元
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0: "CURRENCY_UNSPECIFIED",
		1: "CNY",
		2: "USD",
	}
	Currency_value = map[string]int32{
		"CURRENCY_UNSPECIFIED": 0,
		"CNY":                  1,
		"USD":                  2,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_balancer_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_v1_balancer_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{0}
}

type GetUserBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // UUID as string
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`           // 指定币种
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceRequest) Reset() {
	*x = GetUserBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceRequest) ProtoMessage() {}

func (x *GetUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetMerchantBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    string                 `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // UUID as string
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`                       // 指定币种
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMerchantBalanceRequest) Reset() {
	*x = GetMerchantBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMerchantBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantBalanceRequest) ProtoMessage() {}

func (x *GetMerchantBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{1}
}

func (x *GetMerchantBalanceRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *GetMerchantBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type BalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     float64                `protobuf:"fixed64,1,opt,name=available,proto3" json:"available,omitempty"` // 可用余额
	Frozen        float64                `protobuf:"fixed64,2,opt,name=frozen,proto3" json:"frozen,omitempty"`       // 冻结余额  - 对商家可能总为 0
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`     // 返回币种
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`      // 当前版本号 (用于乐观锁)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	mi := &file_v1_balancer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{2}
}

func (x *BalanceResponse) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *BalanceResponse) GetFrozen() float64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *BalanceResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BalanceResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type FreezeBalanceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                             // 用户 UUID (string)
	OrderId         string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                          // 订单 UUID (string), 用于关联
	Amount          float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                                         // 冻结金额
	Currency        string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                                       // 冻结币种
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                    // 冻结过期时间
	IdempotencyKey  string                 `protobuf:"bytes,6,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`     // 幂等键 (例如使用 order_id 或单独生成)
	ExpectedVersion int32                  `protobuf:"varint,7,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"` // 期望的用户余额版本号 (用于乐观锁)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FreezeBalanceRequest) Reset() {
	*x = FreezeBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeBalanceRequest) ProtoMessage() {}

func (x *FreezeBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeBalanceRequest.ProtoReflect.Descriptor instead.
func (*FreezeBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{3}
}

func (x *FreezeBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FreezeBalanceRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FreezeBalanceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FreezeBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FreezeBalanceRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *FreezeBalanceRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *FreezeBalanceRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type FreezeBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FreezeId      string                 `protobuf:"bytes,1,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"`        // 冻结记录ID (BIGINT as string)
	NewVersion    int32                  `protobuf:"varint,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"` // 操作后用户余额的新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeBalanceResponse) Reset() {
	*x = FreezeBalanceResponse{}
	mi := &file_v1_balancer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeBalanceResponse) ProtoMessage() {}

func (x *FreezeBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeBalanceResponse.ProtoReflect.Descriptor instead.
func (*FreezeBalanceResponse) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{4}
}

func (x *FreezeBalanceResponse) GetFreezeId() string {
	if x != nil {
		return x.FreezeId
	}
	return ""
}

func (x *FreezeBalanceResponse) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

type ConfirmTransferRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FreezeId string                 `protobuf:"bytes,1,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"` // 冻结记录ID (BIGINT as string)
	// merchant_id 可以从 freeze_id 关联的 order_id 推出，或者在这里显式传入
	// string merchant_id = 2;
	IdempotencyKey          string `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`                               // 幂等键
	ExpectedUserVersion     int32  `protobuf:"varint,4,opt,name=expected_user_version,json=expectedUserVersion,proto3" json:"expected_user_version,omitempty"`             // 期望的用户余额版本号
	ExpectedMerchantVersion int32  `protobuf:"varint,5,opt,name=expected_merchant_version,json=expectedMerchantVersion,proto3" json:"expected_merchant_version,omitempty"` // 期望的商家余额版本号
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConfirmTransferRequest) Reset() {
	*x = ConfirmTransferRequest{}
	mi := &file_v1_balancer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTransferRequest) ProtoMessage() {}

func (x *ConfirmTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTransferRequest.ProtoReflect.Descriptor instead.
func (*ConfirmTransferRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmTransferRequest) GetFreezeId() string {
	if x != nil {
		return x.FreezeId
	}
	return ""
}

func (x *ConfirmTransferRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *ConfirmTransferRequest) GetExpectedUserVersion() int32 {
	if x != nil {
		return x.ExpectedUserVersion
	}
	return 0
}

func (x *ConfirmTransferRequest) GetExpectedMerchantVersion() int32 {
	if x != nil {
		return x.ExpectedMerchantVersion
	}
	return 0
}

type ConfirmTransferResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Success            bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId      string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`                   // 交易流水ID (BIGINT as string)
	NewUserVersion     int32                  `protobuf:"varint,3,opt,name=new_user_version,json=newUserVersion,proto3" json:"new_user_version,omitempty"`             // 用户余额新版本号
	NewMerchantVersion int32                  `protobuf:"varint,4,opt,name=new_merchant_version,json=newMerchantVersion,proto3" json:"new_merchant_version,omitempty"` // 商家余额新版本号
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConfirmTransferResponse) Reset() {
	*x = ConfirmTransferResponse{}
	mi := &file_v1_balancer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTransferResponse) ProtoMessage() {}

func (x *ConfirmTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTransferResponse.ProtoReflect.Descriptor instead.
func (*ConfirmTransferResponse) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{6}
}

func (x *ConfirmTransferResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmTransferResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ConfirmTransferResponse) GetNewUserVersion() int32 {
	if x != nil {
		return x.NewUserVersion
	}
	return 0
}

func (x *ConfirmTransferResponse) GetNewMerchantVersion() int32 {
	if x != nil {
		return x.NewMerchantVersion
	}
	return 0
}

type CancelFreezeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FreezeId        string                 `protobuf:"bytes,1,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"`                       // 冻结记录ID (BIGINT as string)
	Reason          string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                                           // 取消原因
	IdempotencyKey  string                 `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`     // 幂等键
	ExpectedVersion int32                  `protobuf:"varint,4,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"` // 期望的用户余额版本号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CancelFreezeRequest) Reset() {
	*x = CancelFreezeRequest{}
	mi := &file_v1_balancer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelFreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFreezeRequest) ProtoMessage() {}

func (x *CancelFreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFreezeRequest.ProtoReflect.Descriptor instead.
func (*CancelFreezeRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{7}
}

func (x *CancelFreezeRequest) GetFreezeId() string {
	if x != nil {
		return x.FreezeId
	}
	return ""
}

func (x *CancelFreezeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CancelFreezeRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *CancelFreezeRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type CancelFreezeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewVersion    int32                  `protobuf:"varint,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"` // 用户余额新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelFreezeResponse) Reset() {
	*x = CancelFreezeResponse{}
	mi := &file_v1_balancer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelFreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFreezeResponse) ProtoMessage() {}

func (x *CancelFreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFreezeResponse.ProtoReflect.Descriptor instead.
func (*CancelFreezeResponse) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{8}
}

func (x *CancelFreezeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelFreezeResponse) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

type RechargeBalanceRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	UserId                string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                // 用户 UUID (string)
	Amount                float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`                                                            // 充值金额
	Currency              string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                                                          // 充值币种
	ExternalTransactionId string                 `protobuf:"bytes,4,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"` // 外部支付流水号 (如支付宝/微信订单号)
	PaymentMethodType     string                 `protobuf:"bytes,5,opt,name=payment_method_type,json=paymentMethodType,proto3" json:"payment_method_type,omitempty"`             // 支付方式类型 (e.g., "ALIPAY", "WECHAT")
	PaymentAccount        string                 `protobuf:"bytes,6,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`                        // 支付账号快照
	IdempotencyKey        string                 `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`                        // 幂等键
	ExpectedVersion       int32                  `protobuf:"varint,8,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"`                    // 期望的用户余额版本号
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RechargeBalanceRequest) Reset() {
	*x = RechargeBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeBalanceRequest) ProtoMessage() {}

func (x *RechargeBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeBalanceRequest.ProtoReflect.Descriptor instead.
func (*RechargeBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{9}
}

func (x *RechargeBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RechargeBalanceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RechargeBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *RechargeBalanceRequest) GetExternalTransactionId() string {
	if x != nil {
		return x.ExternalTransactionId
	}
	return ""
}

func (x *RechargeBalanceRequest) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *RechargeBalanceRequest) GetPaymentAccount() string {
	if x != nil {
		return x.PaymentAccount
	}
	return ""
}

func (x *RechargeBalanceRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *RechargeBalanceRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type RechargeBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 内部交易流水ID (BIGINT as string)
	NewVersion    int32                  `protobuf:"varint,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`         // 用户余额新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RechargeBalanceResponse) Reset() {
	*x = RechargeBalanceResponse{}
	mi := &file_v1_balancer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeBalanceResponse) ProtoMessage() {}

func (x *RechargeBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeBalanceResponse.ProtoReflect.Descriptor instead.
func (*RechargeBalanceResponse) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{10}
}

func (x *RechargeBalanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RechargeBalanceResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *RechargeBalanceResponse) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

type WithdrawBalanceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                              // 用户 UUID (string)
	Amount          float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`                                          // 提现金额
	Currency        string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                                        // 提现币种
	PaymentMethodId string                 `protobuf:"bytes,4,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"` // 用户选择的提现方式ID (BIGINT as string from user_payment_methods)
	IdempotencyKey  string                 `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`      // 幂等键
	ExpectedVersion int32                  `protobuf:"varint,6,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"`  // 期望的用户余额版本号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WithdrawBalanceRequest) Reset() {
	*x = WithdrawBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawBalanceRequest) ProtoMessage() {}

func (x *WithdrawBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawBalanceRequest.ProtoReflect.Descriptor instead.
func (*WithdrawBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{11}
}

func (x *WithdrawBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type WithdrawBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 内部交易流水ID (BIGINT as string) - 初始状态可能是 PENDING
	NewVersion    int32                  `protobuf:"varint,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`         // 用户余额新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawBalanceResponse) Reset() {
	*x = WithdrawBalanceResponse{}
	mi := &file_v1_balancer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawBalanceResponse) ProtoMessage() {}

func (x *WithdrawBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawBalanceResponse.ProtoReflect.Descriptor instead.
func (*WithdrawBalanceResponse) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{12}
}

func (x *WithdrawBalanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WithdrawBalanceResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WithdrawBalanceResponse) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

var File_v1_balancer_proto protoreflect.FileDescriptor

const file_v1_balancer_proto_rawDesc = "" +
	"\n" +
	"\x11v1/balancer.proto\x12\x15ecommerce.balancer.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"L\n" +
	"\x15GetUserBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"X\n" +
	"\x19GetMerchantBalanceRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"}\n" +
	"\x0fBalanceResponse\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\x01R\tavailable\x12\x16\n" +
	"\x06frozen\x18\x02 \x01(\x01R\x06frozen\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\"\x8d\x02\n" +
	"\x14FreezeBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12'\n" +
	"\x0fidempotency_key\x18\x06 \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\a \x01(\x05R\x0fexpectedVersion\"U\n" +
	"\x15FreezeBalanceResponse\x12\x1b\n" +
	"\tfreeze_id\x18\x01 \x01(\tR\bfreezeId\x12\x1f\n" +
	"\vnew_version\x18\x02 \x01(\x05R\n" +
	"newVersion\"\xce\x01\n" +
	"\x16ConfirmTransferRequest\x12\x1b\n" +
	"\tfreeze_id\x18\x01 \x01(\tR\bfreezeId\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\x122\n" +
	"\x15expected_user_version\x18\x04 \x01(\x05R\x13expectedUserVersion\x12:\n" +
	"\x19expected_merchant_version\x18\x05 \x01(\x05R\x17expectedMerchantVersion\"\xb6\x01\n" +
	"\x17ConfirmTransferResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12(\n" +
	"\x10new_user_version\x18\x03 \x01(\x05R\x0enewUserVersion\x120\n" +
	"\x14new_merchant_version\x18\x04 \x01(\x05R\x12newMerchantVersion\"\x9e\x01\n" +
	"\x13CancelFreezeRequest\x12\x1b\n" +
	"\tfreeze_id\x18\x01 \x01(\tR\bfreezeId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\x04 \x01(\x05R\x0fexpectedVersion\"Q\n" +
	"\x14CancelFreezeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vnew_version\x18\x02 \x01(\x05R\n" +
	"newVersion\"\xca\x02\n" +
	"\x16RechargeBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x126\n" +
	"\x17external_transaction_id\x18\x04 \x01(\tR\x15externalTransactionId\x12.\n" +
	"\x13payment_method_type\x18\x05 \x01(\tR\x11paymentMethodType\x12'\n" +
	"\x0fpayment_account\x18\x06 \x01(\tR\x0epaymentAccount\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\b \x01(\x05R\x0fexpectedVersion\"{\n" +
	"\x17RechargeBalanceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12\x1f\n" +
	"\vnew_version\x18\x03 \x01(\x05R\n" +
	"newVersion\"\xe5\x01\n" +
	"\x16WithdrawBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12*\n" +
	"\x11payment_method_id\x18\x04 \x01(\tR\x0fpaymentMethodId\x12'\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\x06 \x01(\x05R\x0fexpectedVersion\"{\n" +
	"\x17WithdrawBalanceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12\x1f\n" +
	"\vnew_version\x18\x03 \x01(\x05R\n" +
	"newVersion*6\n" +
	"\bCurrency\x12\x18\n" +
	"\x14CURRENCY_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03CNY\x10\x01\x12\a\n" +
	"\x03USD\x10\x022\xe4\b\n" +
	"\aBalance\x12\x94\x01\n" +
	"\x0eGetUserBalance\x12,.ecommerce.balancer.v1.GetUserBalanceRequest\x1a&.ecommerce.balancer.v1.BalanceResponse\",\x82\xd3\xe4\x93\x02&\x12$/v1/balances/users/{user_id}/balance\x12\x8a\x01\n" +
	"\rFreezeBalance\x12+.ecommerce.balancer.v1.FreezeBalanceRequest\x1a,.ecommerce.balancer.v1.FreezeBalanceResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/balances/freeze\x12\xa5\x01\n" +
	"\x0fConfirmTransfer\x12-.ecommerce.balancer.v1.ConfirmTransferRequest\x1a..ecommerce.balancer.v1.ConfirmTransferResponse\"3\x82\xd3\xe4\x93\x02-:\x01*\"(/v1/balances/freezes/{freeze_id}/confirm\x12\x9b\x01\n" +
	"\fCancelFreeze\x12*.ecommerce.balancer.v1.CancelFreezeRequest\x1a+.ecommerce.balancer.v1.CancelFreezeResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/balances/freezes/{freeze_id}/cancel\x12\xa4\x01\n" +
	"\x12GetMerchantBalance\x120.ecommerce.balancer.v1.GetMerchantBalanceRequest\x1a&.ecommerce.balancer.v1.BalanceResponse\"4\x82\xd3\xe4\x93\x02.\x12,/v1/balances/merchants/{merchant_id}/balance\x12\xa2\x01\n" +
	"\x0fRechargeBalance\x12-.ecommerce.balancer.v1.RechargeBalanceRequest\x1a..ecommerce.balancer.v1.RechargeBalanceResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/balances/users/{user_id}/recharge\x12\xa2\x01\n" +
	"\x0fWithdrawBalance\x12-.ecommerce.balancer.v1.WithdrawBalanceRequest\x1a..ecommerce.balancer.v1.WithdrawBalanceResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/balances/users/{user_id}/withdrawB$Z\"backend/api/balancer/v1;balancerv1b\x06proto3"

var (
	file_v1_balancer_proto_rawDescOnce sync.Once
	file_v1_balancer_proto_rawDescData []byte
)

func file_v1_balancer_proto_rawDescGZIP() []byte {
	file_v1_balancer_proto_rawDescOnce.Do(func() {
		file_v1_balancer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_balancer_proto_rawDesc), len(file_v1_balancer_proto_rawDesc)))
	})
	return file_v1_balancer_proto_rawDescData
}

var file_v1_balancer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_balancer_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_v1_balancer_proto_goTypes = []any{
	(Currency)(0),                     // 0: ecommerce.balancer.v1.Currency
	(*GetUserBalanceRequest)(nil),     // 1: ecommerce.balancer.v1.GetUserBalanceRequest
	(*GetMerchantBalanceRequest)(nil), // 2: ecommerce.balancer.v1.GetMerchantBalanceRequest
	(*BalanceResponse)(nil),           // 3: ecommerce.balancer.v1.BalanceResponse
	(*FreezeBalanceRequest)(nil),      // 4: ecommerce.balancer.v1.FreezeBalanceRequest
	(*FreezeBalanceResponse)(nil),     // 5: ecommerce.balancer.v1.FreezeBalanceResponse
	(*ConfirmTransferRequest)(nil),    // 6: ecommerce.balancer.v1.ConfirmTransferRequest
	(*ConfirmTransferResponse)(nil),   // 7: ecommerce.balancer.v1.ConfirmTransferResponse
	(*CancelFreezeRequest)(nil),       // 8: ecommerce.balancer.v1.CancelFreezeRequest
	(*CancelFreezeResponse)(nil),      // 9: ecommerce.balancer.v1.CancelFreezeResponse
	(*RechargeBalanceRequest)(nil),    // 10: ecommerce.balancer.v1.RechargeBalanceRequest
	(*RechargeBalanceResponse)(nil),   // 11: ecommerce.balancer.v1.RechargeBalanceResponse
	(*WithdrawBalanceRequest)(nil),    // 12: ecommerce.balancer.v1.WithdrawBalanceRequest
	(*WithdrawBalanceResponse)(nil),   // 13: ecommerce.balancer.v1.WithdrawBalanceResponse
	(*timestamppb.Timestamp)(nil),     // 14: google.protobuf.Timestamp
}
var file_v1_balancer_proto_depIdxs = []int32{
	14, // 0: ecommerce.balancer.v1.FreezeBalanceRequest.expires_at:type_name -> google.protobuf.Timestamp
	1,  // 1: ecommerce.balancer.v1.Balance.GetUserBalance:input_type -> ecommerce.balancer.v1.GetUserBalanceRequest
	4,  // 2: ecommerce.balancer.v1.Balance.FreezeBalance:input_type -> ecommerce.balancer.v1.FreezeBalanceRequest
	6,  // 3: ecommerce.balancer.v1.Balance.ConfirmTransfer:input_type -> ecommerce.balancer.v1.ConfirmTransferRequest
	8,  // 4: ecommerce.balancer.v1.Balance.CancelFreeze:input_type -> ecommerce.balancer.v1.CancelFreezeRequest
	2,  // 5: ecommerce.balancer.v1.Balance.GetMerchantBalance:input_type -> ecommerce.balancer.v1.GetMerchantBalanceRequest
	10, // 6: ecommerce.balancer.v1.Balance.RechargeBalance:input_type -> ecommerce.balancer.v1.RechargeBalanceRequest
	12, // 7: ecommerce.balancer.v1.Balance.WithdrawBalance:input_type -> ecommerce.balancer.v1.WithdrawBalanceRequest
	3,  // 8: ecommerce.balancer.v1.Balance.GetUserBalance:output_type -> ecommerce.balancer.v1.BalanceResponse
	5,  // 9: ecommerce.balancer.v1.Balance.FreezeBalance:output_type -> ecommerce.balancer.v1.FreezeBalanceResponse
	7,  // 10: ecommerce.balancer.v1.Balance.ConfirmTransfer:output_type -> ecommerce.balancer.v1.ConfirmTransferResponse
	9,  // 11: ecommerce.balancer.v1.Balance.CancelFreeze:output_type -> ecommerce.balancer.v1.CancelFreezeResponse
	3,  // 12: ecommerce.balancer.v1.Balance.GetMerchantBalance:output_type -> ecommerce.balancer.v1.BalanceResponse
	11, // 13: ecommerce.balancer.v1.Balance.RechargeBalance:output_type -> ecommerce.balancer.v1.RechargeBalanceResponse
	13, // 14: ecommerce.balancer.v1.Balance.WithdrawBalance:output_type -> ecommerce.balancer.v1.WithdrawBalanceResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_v1_balancer_proto_init() }
func file_v1_balancer_proto_init() {
	if File_v1_balancer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_balancer_proto_rawDesc), len(file_v1_balancer_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_balancer_proto_goTypes,
		DependencyIndexes: file_v1_balancer_proto_depIdxs,
		EnumInfos:         file_v1_balancer_proto_enumTypes,
		MessageInfos:      file_v1_balancer_proto_msgTypes,
	}.Build()
	File_v1_balancer_proto = out.File
	file_v1_balancer_proto_goTypes = nil
	file_v1_balancer_proto_depIdxs = nil
}
