// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/balancer.proto

package balancerv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMerchantVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantIds   []string               `protobuf:"bytes,1,rep,name=merchant_ids,json=merchantIds,proto3" json:"merchant_ids,omitempty"` // 商家 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMerchantVersionRequest) Reset() {
	*x = GetMerchantVersionRequest{}
	mi := &file_v1_balancer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMerchantVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantVersionRequest) ProtoMessage() {}

func (x *GetMerchantVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantVersionRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantVersionRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{0}
}

func (x *GetMerchantVersionRequest) GetMerchantIds() []string {
	if x != nil {
		return x.MerchantIds
	}
	return nil
}

type GetMerchantVersionReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MerchantVersion []int64                `protobuf:"varint,1,rep,packed,name=merchant_version,json=merchantVersion,proto3" json:"merchant_version,omitempty"` // 商家乐观锁版本
	MerchantIds     []string               `protobuf:"bytes,2,rep,name=merchant_ids,json=merchantIds,proto3" json:"merchant_ids,omitempty"`                     // 商家ID
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMerchantVersionReply) Reset() {
	*x = GetMerchantVersionReply{}
	mi := &file_v1_balancer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMerchantVersionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantVersionReply) ProtoMessage() {}

func (x *GetMerchantVersionReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantVersionReply.ProtoReflect.Descriptor instead.
func (*GetMerchantVersionReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{1}
}

func (x *GetMerchantVersionReply) GetMerchantVersion() []int64 {
	if x != nil {
		return x.MerchantVersion
	}
	return nil
}

func (x *GetMerchantVersionReply) GetMerchantIds() []string {
	if x != nil {
		return x.MerchantIds
	}
	return nil
}

type CreateMerchantBalanceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MerchantId     string                 `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`               // UUID as string
	Currency       string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`                                     // 指定币种
	InitialBalance float64                `protobuf:"fixed64,3,opt,name=initial_balance,json=initialBalance,proto3" json:"initial_balance,omitempty"` // 初始余额
	BalancerType   string                 `protobuf:"bytes,4,opt,name=balancer_type,json=balancerType,proto3" json:"balancer_type,omitempty"`         // 余额类型
	IsDefault      bool                   `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                 // 是否默认余额
	AccountDetails *structpb.Struct       `protobuf:"bytes,6,opt,name=account_details,json=accountDetails,proto3" json:"account_details,omitempty"`   // 账户详情 (JSON 格式)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateMerchantBalanceRequest) Reset() {
	*x = CreateMerchantBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMerchantBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantBalanceRequest) ProtoMessage() {}

func (x *CreateMerchantBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantBalanceRequest.ProtoReflect.Descriptor instead.
func (*CreateMerchantBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMerchantBalanceRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateMerchantBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateMerchantBalanceRequest) GetInitialBalance() float64 {
	if x != nil {
		return x.InitialBalance
	}
	return 0
}

func (x *CreateMerchantBalanceRequest) GetBalancerType() string {
	if x != nil {
		return x.BalancerType
	}
	return ""
}

func (x *CreateMerchantBalanceRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CreateMerchantBalanceRequest) GetAccountDetails() *structpb.Struct {
	if x != nil {
		return x.AccountDetails
	}
	return nil
}

type CreateMerchantBalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Available     float64                `protobuf:"fixed64,3,opt,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMerchantBalanceReply) Reset() {
	*x = CreateMerchantBalanceReply{}
	mi := &file_v1_balancer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMerchantBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantBalanceReply) ProtoMessage() {}

func (x *CreateMerchantBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantBalanceReply.ProtoReflect.Descriptor instead.
func (*CreateMerchantBalanceReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMerchantBalanceReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateMerchantBalanceReply) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateMerchantBalanceReply) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

type CreateConsumerBalanceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // UUID as string
	Currency       string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`                                     // 指定币种
	InitialBalance float64                `protobuf:"fixed64,3,opt,name=initial_balance,json=initialBalance,proto3" json:"initial_balance,omitempty"` // 初始余额
	BalancerType   string                 `protobuf:"bytes,4,opt,name=balancer_type,json=balancerType,proto3" json:"balancer_type,omitempty"`         // 余额类型
	IsDefault      bool                   `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                 // 是否默认余额
	AccountDetails *structpb.Struct       `protobuf:"bytes,6,opt,name=account_details,json=accountDetails,proto3" json:"account_details,omitempty"`   // 账户详情 (JSON 格式)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateConsumerBalanceRequest) Reset() {
	*x = CreateConsumerBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsumerBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsumerBalanceRequest) ProtoMessage() {}

func (x *CreateConsumerBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsumerBalanceRequest.ProtoReflect.Descriptor instead.
func (*CreateConsumerBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{4}
}

func (x *CreateConsumerBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateConsumerBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateConsumerBalanceRequest) GetInitialBalance() float64 {
	if x != nil {
		return x.InitialBalance
	}
	return 0
}

func (x *CreateConsumerBalanceRequest) GetBalancerType() string {
	if x != nil {
		return x.BalancerType
	}
	return ""
}

func (x *CreateConsumerBalanceRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CreateConsumerBalanceRequest) GetAccountDetails() *structpb.Struct {
	if x != nil {
		return x.AccountDetails
	}
	return nil
}

type CreateConsumerBalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Available     float64                `protobuf:"fixed64,3,opt,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConsumerBalanceReply) Reset() {
	*x = CreateConsumerBalanceReply{}
	mi := &file_v1_balancer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsumerBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsumerBalanceReply) ProtoMessage() {}

func (x *CreateConsumerBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsumerBalanceReply.ProtoReflect.Descriptor instead.
func (*CreateConsumerBalanceReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{5}
}

func (x *CreateConsumerBalanceReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateConsumerBalanceReply) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateConsumerBalanceReply) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

type GetUserBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // UUID as string
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`           // 指定币种
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceRequest) Reset() {
	*x = GetUserBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceRequest) ProtoMessage() {}

func (x *GetUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type CreateTransactionRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Type              string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // 交易类型: 充值|支付|退款|提现
	Amount            float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency          string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	FromUserId        string                 `protobuf:"bytes,5,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToMerchantId      string                 `protobuf:"bytes,6,opt,name=to_merchant_id,json=toMerchantId,proto3" json:"to_merchant_id,omitempty"`
	PaymentMethodType string                 `protobuf:"bytes,7,opt,name=payment_method_type,json=paymentMethodType,proto3" json:"payment_method_type,omitempty"` // 支付方式: ALIPAY|WECHAT|BALANCE|BANK_CARD
	PaymentAccount    string                 `protobuf:"bytes,8,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`            // 支付账号, 对应的第三方支付方式的账号
	PaymentExtra      *structpb.Struct       `protobuf:"bytes,9,opt,name=payment_extra,json=paymentExtra,proto3" json:"payment_extra,omitempty"`                  // 交易号等额外信息
	Status            string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`                                                 // 支付状态: 等待支付|已支付|取消支付|支付异常
	IdempotencyKey    string                 `protobuf:"bytes,12,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`           // 关联冻结记录
	FreezeId          int64                  `protobuf:"varint,11,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"`                            // 幂等键
	ConsumerVersion   int64                  `protobuf:"varint,13,opt,name=consumer_version,json=consumerVersion,proto3" json:"consumer_version,omitempty"`       // 用户乐观锁版本
	MerchantVersion   int64                  `protobuf:"varint,14,opt,name=merchant_version,json=merchantVersion,proto3" json:"merchant_version,omitempty"`       // 商家乐观锁版本
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateTransactionRequest) Reset() {
	*x = CreateTransactionRequest{}
	mi := &file_v1_balancer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequest) ProtoMessage() {}

func (x *CreateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTransactionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateTransactionRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateTransactionRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateTransactionRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *CreateTransactionRequest) GetToMerchantId() string {
	if x != nil {
		return x.ToMerchantId
	}
	return ""
}

func (x *CreateTransactionRequest) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *CreateTransactionRequest) GetPaymentAccount() string {
	if x != nil {
		return x.PaymentAccount
	}
	return ""
}

func (x *CreateTransactionRequest) GetPaymentExtra() *structpb.Struct {
	if x != nil {
		return x.PaymentExtra
	}
	return nil
}

func (x *CreateTransactionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateTransactionRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *CreateTransactionRequest) GetFreezeId() int64 {
	if x != nil {
		return x.FreezeId
	}
	return 0
}

func (x *CreateTransactionRequest) GetConsumerVersion() int64 {
	if x != nil {
		return x.ConsumerVersion
	}
	return 0
}

func (x *CreateTransactionRequest) GetMerchantVersion() int64 {
	if x != nil {
		return x.MerchantVersion
	}
	return 0
}

type CreateTransactionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTransactionReply) Reset() {
	*x = CreateTransactionReply{}
	mi := &file_v1_balancer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionReply) ProtoMessage() {}

func (x *CreateTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionReply.ProtoReflect.Descriptor instead.
func (*CreateTransactionReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTransactionReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // UUID as string
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`           // 指定币种
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PaymentStatus string                 `protobuf:"bytes,5,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsRequest) Reset() {
	*x = GetTransactionsRequest{}
	mi := &file_v1_balancer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsRequest) ProtoMessage() {}

func (x *GetTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTransactionsRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetTransactionsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTransactionsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTransactionsRequest) GetPaymentStatus() string {
	if x != nil {
		return x.PaymentStatus
	}
	return ""
}

type Transactions struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type              string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Amount            float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency          string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	FromUserId        string                 `protobuf:"bytes,5,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToMerchantId      string                 `protobuf:"bytes,6,opt,name=to_merchant_id,json=toMerchantId,proto3" json:"to_merchant_id,omitempty"`
	PaymentMethodType string                 `protobuf:"bytes,7,opt,name=payment_method_type,json=paymentMethodType,proto3" json:"payment_method_type,omitempty"`
	PaymentAccount    string                 `protobuf:"bytes,8,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`
	PaymentExtra      *structpb.Struct       `protobuf:"bytes,9,opt,name=payment_extra,json=paymentExtra,proto3" json:"payment_extra,omitempty"`
	Status            string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Transactions) Reset() {
	*x = Transactions{}
	mi := &file_v1_balancer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transactions) ProtoMessage() {}

func (x *Transactions) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transactions.ProtoReflect.Descriptor instead.
func (*Transactions) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{10}
}

func (x *Transactions) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Transactions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Transactions) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transactions) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transactions) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *Transactions) GetToMerchantId() string {
	if x != nil {
		return x.ToMerchantId
	}
	return ""
}

func (x *Transactions) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *Transactions) GetPaymentAccount() string {
	if x != nil {
		return x.PaymentAccount
	}
	return ""
}

func (x *Transactions) GetPaymentExtra() *structpb.Struct {
	if x != nil {
		return x.PaymentExtra
	}
	return nil
}

func (x *Transactions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transactions) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transactions) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetTransactionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transactions        `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsReply) Reset() {
	*x = GetTransactionsReply{}
	mi := &file_v1_balancer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsReply) ProtoMessage() {}

func (x *GetTransactionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsReply.ProtoReflect.Descriptor instead.
func (*GetTransactionsReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionsReply) GetTransactions() []*Transactions {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetMerchantBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    string                 `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // UUID as string
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`                       // 指定币种
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMerchantBalanceRequest) Reset() {
	*x = GetMerchantBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMerchantBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantBalanceRequest) ProtoMessage() {}

func (x *GetMerchantBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{12}
}

func (x *GetMerchantBalanceRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *GetMerchantBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type BalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     float64                `protobuf:"fixed64,1,opt,name=available,proto3" json:"available,omitempty"` // 可用余额
	Frozen        float64                `protobuf:"fixed64,2,opt,name=frozen,proto3" json:"frozen,omitempty"`       // 冻结余额  - 对商家可能总为 0
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`     // 返回币种
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`      // 当前版本号 (用于乐观锁)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceReply) Reset() {
	*x = BalanceReply{}
	mi := &file_v1_balancer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceReply) ProtoMessage() {}

func (x *BalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceReply.ProtoReflect.Descriptor instead.
func (*BalanceReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{13}
}

func (x *BalanceReply) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *BalanceReply) GetFrozen() float64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *BalanceReply) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BalanceReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type FreezeBalanceRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`     // 用户 UUID (string)
	OrderId  int64                  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单id, 用于关联
	Amount   float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                 // 冻结金额
	Currency string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`               // 冻结币种
	// google.protobuf.Timestamp expires_at = 5; // 冻结过期时间
	IdempotencyKey  string `protobuf:"bytes,6,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`     // 幂等键 (例如使用 order_id 或单独生成)
	ExpectedVersion int32  `protobuf:"varint,7,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"` // 期望的用户余额版本号 (用于乐观锁)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FreezeBalanceRequest) Reset() {
	*x = FreezeBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeBalanceRequest) ProtoMessage() {}

func (x *FreezeBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeBalanceRequest.ProtoReflect.Descriptor instead.
func (*FreezeBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{14}
}

func (x *FreezeBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FreezeBalanceRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *FreezeBalanceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FreezeBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FreezeBalanceRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *FreezeBalanceRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type FreezeBalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FreezeId      int64                  `protobuf:"varint,1,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"`       // 冻结记录ID
	NewVersion    int32                  `protobuf:"varint,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"` // 操作后用户余额的新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeBalanceReply) Reset() {
	*x = FreezeBalanceReply{}
	mi := &file_v1_balancer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeBalanceReply) ProtoMessage() {}

func (x *FreezeBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeBalanceReply.ProtoReflect.Descriptor instead.
func (*FreezeBalanceReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{15}
}

func (x *FreezeBalanceReply) GetFreezeId() int64 {
	if x != nil {
		return x.FreezeId
	}
	return 0
}

func (x *FreezeBalanceReply) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

type ConfirmTransferRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FreezeId int64                  `protobuf:"varint,1,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"` // 冻结记录ID
	// merchant_id 可以从 freeze_id 关联的 order_id 推出，或者在这里显式传入
	MerchantId              string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	IdempotencyKey          string `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`                               // 幂等键
	ExpectedUserVersion     int32  `protobuf:"varint,4,opt,name=expected_user_version,json=expectedUserVersion,proto3" json:"expected_user_version,omitempty"`             // 期望的用户余额版本号
	ExpectedMerchantVersion int32  `protobuf:"varint,5,opt,name=expected_merchant_version,json=expectedMerchantVersion,proto3" json:"expected_merchant_version,omitempty"` // 期望的商家余额版本号
	PaymentAccount          string `protobuf:"bytes,6,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`                               // 支付账号
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConfirmTransferRequest) Reset() {
	*x = ConfirmTransferRequest{}
	mi := &file_v1_balancer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTransferRequest) ProtoMessage() {}

func (x *ConfirmTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTransferRequest.ProtoReflect.Descriptor instead.
func (*ConfirmTransferRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{16}
}

func (x *ConfirmTransferRequest) GetFreezeId() int64 {
	if x != nil {
		return x.FreezeId
	}
	return 0
}

func (x *ConfirmTransferRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ConfirmTransferRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *ConfirmTransferRequest) GetExpectedUserVersion() int32 {
	if x != nil {
		return x.ExpectedUserVersion
	}
	return 0
}

func (x *ConfirmTransferRequest) GetExpectedMerchantVersion() int32 {
	if x != nil {
		return x.ExpectedMerchantVersion
	}
	return 0
}

func (x *ConfirmTransferRequest) GetPaymentAccount() string {
	if x != nil {
		return x.PaymentAccount
	}
	return ""
}

type ConfirmTransferReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Success            bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId      int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`                  // 交易流水ID
	NewUserVersion     int32                  `protobuf:"varint,3,opt,name=new_user_version,json=newUserVersion,proto3" json:"new_user_version,omitempty"`             // 用户余额新版本号
	NewMerchantVersion int32                  `protobuf:"varint,4,opt,name=new_merchant_version,json=newMerchantVersion,proto3" json:"new_merchant_version,omitempty"` // 商家余额新版本号
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConfirmTransferReply) Reset() {
	*x = ConfirmTransferReply{}
	mi := &file_v1_balancer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTransferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTransferReply) ProtoMessage() {}

func (x *ConfirmTransferReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTransferReply.ProtoReflect.Descriptor instead.
func (*ConfirmTransferReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{17}
}

func (x *ConfirmTransferReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmTransferReply) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ConfirmTransferReply) GetNewUserVersion() int32 {
	if x != nil {
		return x.NewUserVersion
	}
	return 0
}

func (x *ConfirmTransferReply) GetNewMerchantVersion() int32 {
	if x != nil {
		return x.NewMerchantVersion
	}
	return 0
}

type CancelFreezeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FreezeId        int64                  `protobuf:"varint,1,opt,name=freeze_id,json=freezeId,proto3" json:"freeze_id,omitempty"`                      // 冻结记录ID
	Reason          string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                                           // 取消原因
	IdempotencyKey  string                 `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`     // 幂等键
	ExpectedVersion int32                  `protobuf:"varint,4,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"` // 期望的用户余额版本号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CancelFreezeRequest) Reset() {
	*x = CancelFreezeRequest{}
	mi := &file_v1_balancer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelFreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFreezeRequest) ProtoMessage() {}

func (x *CancelFreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFreezeRequest.ProtoReflect.Descriptor instead.
func (*CancelFreezeRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{18}
}

func (x *CancelFreezeRequest) GetFreezeId() int64 {
	if x != nil {
		return x.FreezeId
	}
	return 0
}

func (x *CancelFreezeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CancelFreezeRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *CancelFreezeRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type CancelFreezeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewVersion    int32                  `protobuf:"varint,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"` // 用户余额新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelFreezeReply) Reset() {
	*x = CancelFreezeReply{}
	mi := &file_v1_balancer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelFreezeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFreezeReply) ProtoMessage() {}

func (x *CancelFreezeReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFreezeReply.ProtoReflect.Descriptor instead.
func (*CancelFreezeReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{19}
}

func (x *CancelFreezeReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelFreezeReply) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

type RechargeBalanceRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	UserId                string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                 // 用户 UUID (string)
	Amount                float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`                                                             // 充值金额
	Currency              string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                                                           // 充值币种
	ExternalTransactionId int64                  `protobuf:"varint,4,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"` // 外部支付流水号 (如支付宝/微信订单号)
	PaymentMethodType     string                 `protobuf:"bytes,5,opt,name=payment_method_type,json=paymentMethodType,proto3" json:"payment_method_type,omitempty"`              // 支付方式类型 (e.g., "ALIPAY", "WECHAT")
	PaymentAccount        string                 `protobuf:"bytes,6,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`                         // 支付账号快照
	IdempotencyKey        string                 `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`                         // 幂等键
	ExpectedVersion       int32                  `protobuf:"varint,8,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"`                     // 期望的用户余额版本号
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RechargeBalanceRequest) Reset() {
	*x = RechargeBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeBalanceRequest) ProtoMessage() {}

func (x *RechargeBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeBalanceRequest.ProtoReflect.Descriptor instead.
func (*RechargeBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{20}
}

func (x *RechargeBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RechargeBalanceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RechargeBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *RechargeBalanceRequest) GetExternalTransactionId() int64 {
	if x != nil {
		return x.ExternalTransactionId
	}
	return 0
}

func (x *RechargeBalanceRequest) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *RechargeBalanceRequest) GetPaymentAccount() string {
	if x != nil {
		return x.PaymentAccount
	}
	return ""
}

func (x *RechargeBalanceRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *RechargeBalanceRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type RechargeBalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 内部交易流水ID
	NewVersion    int32                  `protobuf:"varint,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`          // 用户余额新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RechargeBalanceReply) Reset() {
	*x = RechargeBalanceReply{}
	mi := &file_v1_balancer_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeBalanceReply) ProtoMessage() {}

func (x *RechargeBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeBalanceReply.ProtoReflect.Descriptor instead.
func (*RechargeBalanceReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{21}
}

func (x *RechargeBalanceReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RechargeBalanceReply) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *RechargeBalanceReply) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

type WithdrawBalanceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户 UUID (string)
	MerchantId      string                 `protobuf:"bytes,7,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Amount          float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`                                          // 提现金额
	Currency        string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                                        // 提现币种
	PaymentMethodId string                 `protobuf:"bytes,4,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"` // 用户选择的提现方式ID (BIGINT as string from user_payment_methods)
	IdempotencyKey  string                 `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`      // 幂等键
	ExpectedVersion int32                  `protobuf:"varint,6,opt,name=expected_version,json=expectedVersion,proto3" json:"expected_version,omitempty"`  // 期望的用户余额版本号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WithdrawBalanceRequest) Reset() {
	*x = WithdrawBalanceRequest{}
	mi := &file_v1_balancer_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawBalanceRequest) ProtoMessage() {}

func (x *WithdrawBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawBalanceRequest.ProtoReflect.Descriptor instead.
func (*WithdrawBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{22}
}

func (x *WithdrawBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *WithdrawBalanceRequest) GetExpectedVersion() int32 {
	if x != nil {
		return x.ExpectedVersion
	}
	return 0
}

type WithdrawBalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TransactionId int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 内部交易流水ID  - 初始状态可能是 PENDING
	NewVersion    int32                  `protobuf:"varint,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`          // 用户余额新版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawBalanceReply) Reset() {
	*x = WithdrawBalanceReply{}
	mi := &file_v1_balancer_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawBalanceReply) ProtoMessage() {}

func (x *WithdrawBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_balancer_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawBalanceReply.ProtoReflect.Descriptor instead.
func (*WithdrawBalanceReply) Descriptor() ([]byte, []int) {
	return file_v1_balancer_proto_rawDescGZIP(), []int{23}
}

func (x *WithdrawBalanceReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WithdrawBalanceReply) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *WithdrawBalanceReply) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

var File_v1_balancer_proto protoreflect.FileDescriptor

const file_v1_balancer_proto_rawDesc = "" +
	"\n" +
	"\x11v1/balancer.proto\x12\x15ecommerce.balancer.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\">\n" +
	"\x19GetMerchantVersionRequest\x12!\n" +
	"\fmerchant_ids\x18\x01 \x03(\tR\vmerchantIds\"g\n" +
	"\x17GetMerchantVersionReply\x12)\n" +
	"\x10merchant_version\x18\x01 \x03(\x03R\x0fmerchantVersion\x12!\n" +
	"\fmerchant_ids\x18\x02 \x03(\tR\vmerchantIds\"\x8a\x02\n" +
	"\x1cCreateMerchantBalanceRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12'\n" +
	"\x0finitial_balance\x18\x03 \x01(\x01R\x0einitialBalance\x12#\n" +
	"\rbalancer_type\x18\x04 \x01(\tR\fbalancerType\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\x12@\n" +
	"\x0faccount_details\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x0eaccountDetails\"o\n" +
	"\x1aCreateMerchantBalanceReply\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tavailable\x18\x03 \x01(\x01R\tavailable\"\x82\x02\n" +
	"\x1cCreateConsumerBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12'\n" +
	"\x0finitial_balance\x18\x03 \x01(\x01R\x0einitialBalance\x12#\n" +
	"\rbalancer_type\x18\x04 \x01(\tR\fbalancerType\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\x12@\n" +
	"\x0faccount_details\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x0eaccountDetails\"o\n" +
	"\x1aCreateConsumerBalanceReply\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tavailable\x18\x03 \x01(\x01R\tavailable\"L\n" +
	"\x15GetUserBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"\xf5\x03\n" +
	"\x18CreateTransactionRequest\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12 \n" +
	"\ffrom_user_id\x18\x05 \x01(\tR\n" +
	"fromUserId\x12$\n" +
	"\x0eto_merchant_id\x18\x06 \x01(\tR\ftoMerchantId\x12.\n" +
	"\x13payment_method_type\x18\a \x01(\tR\x11paymentMethodType\x12'\n" +
	"\x0fpayment_account\x18\b \x01(\tR\x0epaymentAccount\x12<\n" +
	"\rpayment_extra\x18\t \x01(\v2\x17.google.protobuf.StructR\fpaymentExtra\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x12'\n" +
	"\x0fidempotency_key\x18\f \x01(\tR\x0eidempotencyKey\x12\x1b\n" +
	"\tfreeze_id\x18\v \x01(\x03R\bfreezeId\x12)\n" +
	"\x10consumer_version\x18\r \x01(\x03R\x0fconsumerVersion\x12)\n" +
	"\x10merchant_version\x18\x0e \x01(\x03R\x0fmerchantVersion\"(\n" +
	"\x16CreateTransactionReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xa5\x01\n" +
	"\x16GetTransactionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x03R\bpageSize\x12%\n" +
	"\x0epayment_status\x18\x05 \x01(\tR\rpaymentStatus\"\xd3\x03\n" +
	"\fTransactions\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12 \n" +
	"\ffrom_user_id\x18\x05 \x01(\tR\n" +
	"fromUserId\x12$\n" +
	"\x0eto_merchant_id\x18\x06 \x01(\tR\ftoMerchantId\x12.\n" +
	"\x13payment_method_type\x18\a \x01(\tR\x11paymentMethodType\x12'\n" +
	"\x0fpayment_account\x18\b \x01(\tR\x0epaymentAccount\x12<\n" +
	"\rpayment_extra\x18\t \x01(\v2\x17.google.protobuf.StructR\fpaymentExtra\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"_\n" +
	"\x14GetTransactionsReply\x12G\n" +
	"\ftransactions\x18\x01 \x03(\v2#.ecommerce.balancer.v1.TransactionsR\ftransactions\"X\n" +
	"\x19GetMerchantBalanceRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"z\n" +
	"\fBalanceReply\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\x01R\tavailable\x12\x16\n" +
	"\x06frozen\x18\x02 \x01(\x01R\x06frozen\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\"\xd2\x01\n" +
	"\x14FreezeBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\x03R\aorderId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12'\n" +
	"\x0fidempotency_key\x18\x06 \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\a \x01(\x05R\x0fexpectedVersion\"R\n" +
	"\x12FreezeBalanceReply\x12\x1b\n" +
	"\tfreeze_id\x18\x01 \x01(\x03R\bfreezeId\x12\x1f\n" +
	"\vnew_version\x18\x02 \x01(\x05R\n" +
	"newVersion\"\x98\x02\n" +
	"\x16ConfirmTransferRequest\x12\x1b\n" +
	"\tfreeze_id\x18\x01 \x01(\x03R\bfreezeId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\x122\n" +
	"\x15expected_user_version\x18\x04 \x01(\x05R\x13expectedUserVersion\x12:\n" +
	"\x19expected_merchant_version\x18\x05 \x01(\x05R\x17expectedMerchantVersion\x12'\n" +
	"\x0fpayment_account\x18\x06 \x01(\tR\x0epaymentAccount\"\xb3\x01\n" +
	"\x14ConfirmTransferReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12(\n" +
	"\x10new_user_version\x18\x03 \x01(\x05R\x0enewUserVersion\x120\n" +
	"\x14new_merchant_version\x18\x04 \x01(\x05R\x12newMerchantVersion\"\x9e\x01\n" +
	"\x13CancelFreezeRequest\x12\x1b\n" +
	"\tfreeze_id\x18\x01 \x01(\x03R\bfreezeId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\x04 \x01(\x05R\x0fexpectedVersion\"N\n" +
	"\x11CancelFreezeReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vnew_version\x18\x02 \x01(\x05R\n" +
	"newVersion\"\xca\x02\n" +
	"\x16RechargeBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x126\n" +
	"\x17external_transaction_id\x18\x04 \x01(\x03R\x15externalTransactionId\x12.\n" +
	"\x13payment_method_type\x18\x05 \x01(\tR\x11paymentMethodType\x12'\n" +
	"\x0fpayment_account\x18\x06 \x01(\tR\x0epaymentAccount\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\b \x01(\x05R\x0fexpectedVersion\"x\n" +
	"\x14RechargeBalanceReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12\x1f\n" +
	"\vnew_version\x18\x03 \x01(\x05R\n" +
	"newVersion\"\x86\x02\n" +
	"\x16WithdrawBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vmerchant_id\x18\a \x01(\tR\n" +
	"merchantId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12*\n" +
	"\x11payment_method_id\x18\x04 \x01(\tR\x0fpaymentMethodId\x12'\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tR\x0eidempotencyKey\x12)\n" +
	"\x10expected_version\x18\x06 \x01(\x05R\x0fexpectedVersion\"x\n" +
	"\x14WithdrawBalanceReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12\x1f\n" +
	"\vnew_version\x18\x03 \x01(\x05R\n" +
	"newVersion2\xed\x0e\n" +
	"\aBalance\x12\xb8\x01\n" +
	"\x15CreateMerchantBalance\x123.ecommerce.balancer.v1.CreateMerchantBalanceRequest\x1a1.ecommerce.balancer.v1.CreateMerchantBalanceReply\"7\x82\xd3\xe4\x93\x021:\x01*\x1a,/v1/balances/merchants/{merchant_id}/balance\x12\x9b\x01\n" +
	"\x12GetMerchantVersion\x120.ecommerce.balancer.v1.GetMerchantVersionRequest\x1a..ecommerce.balancer.v1.GetMerchantVersionReply\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/orders/merchant/version\x12\x88\x01\n" +
	"\x0eGetUserBalance\x12,.ecommerce.balancer.v1.GetUserBalanceRequest\x1a#.ecommerce.balancer.v1.BalanceReply\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/balances/users/balancer\x12\x87\x01\n" +
	"\rFreezeBalance\x12+.ecommerce.balancer.v1.FreezeBalanceRequest\x1a).ecommerce.balancer.v1.FreezeBalanceReply\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/balances/freeze\x12\x99\x01\n" +
	"\x11CreateTransaction\x12/.ecommerce.balancer.v1.CreateTransactionRequest\x1a-.ecommerce.balancer.v1.CreateTransactionReply\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\x1a\x19/v1/balances/transactions\x12\x90\x01\n" +
	"\x0fGetTransactions\x12-.ecommerce.balancer.v1.GetTransactionsRequest\x1a+.ecommerce.balancer.v1.GetTransactionsReply\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/balances/transactions\x12\xb0\x01\n" +
	"\x15CreateConsumerBalance\x123.ecommerce.balancer.v1.CreateConsumerBalanceRequest\x1a1.ecommerce.balancer.v1.CreateConsumerBalanceReply\"/\x82\xd3\xe4\x93\x02):\x01*\x1a$/v1/balances/users/{user_id}/balance\x12\xa2\x01\n" +
	"\x0fConfirmTransfer\x12-.ecommerce.balancer.v1.ConfirmTransferRequest\x1a+.ecommerce.balancer.v1.ConfirmTransferReply\"3\x82\xd3\xe4\x93\x02-:\x01*\"(/v1/balances/freezes/{freeze_id}/confirm\x12\x98\x01\n" +
	"\fCancelFreeze\x12*.ecommerce.balancer.v1.CancelFreezeRequest\x1a(.ecommerce.balancer.v1.CancelFreezeReply\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/balances/freezes/{freeze_id}/cancel\x12\xa1\x01\n" +
	"\x12GetMerchantBalance\x120.ecommerce.balancer.v1.GetMerchantBalanceRequest\x1a#.ecommerce.balancer.v1.BalanceReply\"4\x82\xd3\xe4\x93\x02.\x12,/v1/balances/merchants/{merchant_id}/balance\x12\x95\x01\n" +
	"\x0fRechargeBalance\x12-.ecommerce.balancer.v1.RechargeBalanceRequest\x1a+.ecommerce.balancer.v1.RechargeBalanceReply\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/balances/users/recharge\x12\x95\x01\n" +
	"\x0fWithdrawBalance\x12-.ecommerce.balancer.v1.WithdrawBalanceRequest\x1a+.ecommerce.balancer.v1.WithdrawBalanceReply\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/balances/users/withdrawB$Z\"backend/api/balancer/v1;balancerv1b\x06proto3"

var (
	file_v1_balancer_proto_rawDescOnce sync.Once
	file_v1_balancer_proto_rawDescData []byte
)

func file_v1_balancer_proto_rawDescGZIP() []byte {
	file_v1_balancer_proto_rawDescOnce.Do(func() {
		file_v1_balancer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_balancer_proto_rawDesc), len(file_v1_balancer_proto_rawDesc)))
	})
	return file_v1_balancer_proto_rawDescData
}

var file_v1_balancer_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_v1_balancer_proto_goTypes = []any{
	(*GetMerchantVersionRequest)(nil),    // 0: ecommerce.balancer.v1.GetMerchantVersionRequest
	(*GetMerchantVersionReply)(nil),      // 1: ecommerce.balancer.v1.GetMerchantVersionReply
	(*CreateMerchantBalanceRequest)(nil), // 2: ecommerce.balancer.v1.CreateMerchantBalanceRequest
	(*CreateMerchantBalanceReply)(nil),   // 3: ecommerce.balancer.v1.CreateMerchantBalanceReply
	(*CreateConsumerBalanceRequest)(nil), // 4: ecommerce.balancer.v1.CreateConsumerBalanceRequest
	(*CreateConsumerBalanceReply)(nil),   // 5: ecommerce.balancer.v1.CreateConsumerBalanceReply
	(*GetUserBalanceRequest)(nil),        // 6: ecommerce.balancer.v1.GetUserBalanceRequest
	(*CreateTransactionRequest)(nil),     // 7: ecommerce.balancer.v1.CreateTransactionRequest
	(*CreateTransactionReply)(nil),       // 8: ecommerce.balancer.v1.CreateTransactionReply
	(*GetTransactionsRequest)(nil),       // 9: ecommerce.balancer.v1.GetTransactionsRequest
	(*Transactions)(nil),                 // 10: ecommerce.balancer.v1.Transactions
	(*GetTransactionsReply)(nil),         // 11: ecommerce.balancer.v1.GetTransactionsReply
	(*GetMerchantBalanceRequest)(nil),    // 12: ecommerce.balancer.v1.GetMerchantBalanceRequest
	(*BalanceReply)(nil),                 // 13: ecommerce.balancer.v1.BalanceReply
	(*FreezeBalanceRequest)(nil),         // 14: ecommerce.balancer.v1.FreezeBalanceRequest
	(*FreezeBalanceReply)(nil),           // 15: ecommerce.balancer.v1.FreezeBalanceReply
	(*ConfirmTransferRequest)(nil),       // 16: ecommerce.balancer.v1.ConfirmTransferRequest
	(*ConfirmTransferReply)(nil),         // 17: ecommerce.balancer.v1.ConfirmTransferReply
	(*CancelFreezeRequest)(nil),          // 18: ecommerce.balancer.v1.CancelFreezeRequest
	(*CancelFreezeReply)(nil),            // 19: ecommerce.balancer.v1.CancelFreezeReply
	(*RechargeBalanceRequest)(nil),       // 20: ecommerce.balancer.v1.RechargeBalanceRequest
	(*RechargeBalanceReply)(nil),         // 21: ecommerce.balancer.v1.RechargeBalanceReply
	(*WithdrawBalanceRequest)(nil),       // 22: ecommerce.balancer.v1.WithdrawBalanceRequest
	(*WithdrawBalanceReply)(nil),         // 23: ecommerce.balancer.v1.WithdrawBalanceReply
	(*structpb.Struct)(nil),              // 24: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),        // 25: google.protobuf.Timestamp
}
var file_v1_balancer_proto_depIdxs = []int32{
	24, // 0: ecommerce.balancer.v1.CreateMerchantBalanceRequest.account_details:type_name -> google.protobuf.Struct
	24, // 1: ecommerce.balancer.v1.CreateConsumerBalanceRequest.account_details:type_name -> google.protobuf.Struct
	24, // 2: ecommerce.balancer.v1.CreateTransactionRequest.payment_extra:type_name -> google.protobuf.Struct
	24, // 3: ecommerce.balancer.v1.Transactions.payment_extra:type_name -> google.protobuf.Struct
	25, // 4: ecommerce.balancer.v1.Transactions.created_at:type_name -> google.protobuf.Timestamp
	25, // 5: ecommerce.balancer.v1.Transactions.updated_at:type_name -> google.protobuf.Timestamp
	10, // 6: ecommerce.balancer.v1.GetTransactionsReply.transactions:type_name -> ecommerce.balancer.v1.Transactions
	2,  // 7: ecommerce.balancer.v1.Balance.CreateMerchantBalance:input_type -> ecommerce.balancer.v1.CreateMerchantBalanceRequest
	0,  // 8: ecommerce.balancer.v1.Balance.GetMerchantVersion:input_type -> ecommerce.balancer.v1.GetMerchantVersionRequest
	6,  // 9: ecommerce.balancer.v1.Balance.GetUserBalance:input_type -> ecommerce.balancer.v1.GetUserBalanceRequest
	14, // 10: ecommerce.balancer.v1.Balance.FreezeBalance:input_type -> ecommerce.balancer.v1.FreezeBalanceRequest
	7,  // 11: ecommerce.balancer.v1.Balance.CreateTransaction:input_type -> ecommerce.balancer.v1.CreateTransactionRequest
	9,  // 12: ecommerce.balancer.v1.Balance.GetTransactions:input_type -> ecommerce.balancer.v1.GetTransactionsRequest
	4,  // 13: ecommerce.balancer.v1.Balance.CreateConsumerBalance:input_type -> ecommerce.balancer.v1.CreateConsumerBalanceRequest
	16, // 14: ecommerce.balancer.v1.Balance.ConfirmTransfer:input_type -> ecommerce.balancer.v1.ConfirmTransferRequest
	18, // 15: ecommerce.balancer.v1.Balance.CancelFreeze:input_type -> ecommerce.balancer.v1.CancelFreezeRequest
	12, // 16: ecommerce.balancer.v1.Balance.GetMerchantBalance:input_type -> ecommerce.balancer.v1.GetMerchantBalanceRequest
	20, // 17: ecommerce.balancer.v1.Balance.RechargeBalance:input_type -> ecommerce.balancer.v1.RechargeBalanceRequest
	22, // 18: ecommerce.balancer.v1.Balance.WithdrawBalance:input_type -> ecommerce.balancer.v1.WithdrawBalanceRequest
	3,  // 19: ecommerce.balancer.v1.Balance.CreateMerchantBalance:output_type -> ecommerce.balancer.v1.CreateMerchantBalanceReply
	1,  // 20: ecommerce.balancer.v1.Balance.GetMerchantVersion:output_type -> ecommerce.balancer.v1.GetMerchantVersionReply
	13, // 21: ecommerce.balancer.v1.Balance.GetUserBalance:output_type -> ecommerce.balancer.v1.BalanceReply
	15, // 22: ecommerce.balancer.v1.Balance.FreezeBalance:output_type -> ecommerce.balancer.v1.FreezeBalanceReply
	8,  // 23: ecommerce.balancer.v1.Balance.CreateTransaction:output_type -> ecommerce.balancer.v1.CreateTransactionReply
	11, // 24: ecommerce.balancer.v1.Balance.GetTransactions:output_type -> ecommerce.balancer.v1.GetTransactionsReply
	5,  // 25: ecommerce.balancer.v1.Balance.CreateConsumerBalance:output_type -> ecommerce.balancer.v1.CreateConsumerBalanceReply
	17, // 26: ecommerce.balancer.v1.Balance.ConfirmTransfer:output_type -> ecommerce.balancer.v1.ConfirmTransferReply
	19, // 27: ecommerce.balancer.v1.Balance.CancelFreeze:output_type -> ecommerce.balancer.v1.CancelFreezeReply
	13, // 28: ecommerce.balancer.v1.Balance.GetMerchantBalance:output_type -> ecommerce.balancer.v1.BalanceReply
	21, // 29: ecommerce.balancer.v1.Balance.RechargeBalance:output_type -> ecommerce.balancer.v1.RechargeBalanceReply
	23, // 30: ecommerce.balancer.v1.Balance.WithdrawBalance:output_type -> ecommerce.balancer.v1.WithdrawBalanceReply
	19, // [19:31] is the sub-list for method output_type
	7,  // [7:19] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_v1_balancer_proto_init() }
func file_v1_balancer_proto_init() {
	if File_v1_balancer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_balancer_proto_rawDesc), len(file_v1_balancer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_balancer_proto_goTypes,
		DependencyIndexes: file_v1_balancer_proto_depIdxs,
		MessageInfos:      file_v1_balancer_proto_msgTypes,
	}.Build()
	File_v1_balancer_proto = out.File
	file_v1_balancer_proto_goTypes = nil
	file_v1_balancer_proto_depIdxs = nil
}
